(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{112:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return i})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return l}));var n=a(1),o=a(6),r=(a(0),a(213)),s={id:"intro",title:"Logic"},i={id:"logic/intro",title:"Logic",description:"(Adapted from Critchlow & Eck)",source:"@site/docs/logic/intro.md",permalink:"/focsipedia/docs/logic/intro",editUrl:"https://github.com/bhoward/focsipedia/edit/master/docs/logic/intro.md",sidebar:"someSidebar",previous:{title:"Topics",permalink:"/focsipedia/docs/topics"},next:{title:"Propositional Logic",permalink:"/focsipedia/docs/logic/props"}},c=[],p={rightToc:c};function l(e){var t=e.components,a=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},p,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"(Adapted from Critchlow & Eck)"),Object(r.b)("p",null,"In a sense, we know a lot more than we realize,\nbecause everything that we know has consequences---",Object(r.b)("em",{parentName:"p"},"logical"),"\nconsequences---that follow automatically.  If you know that all\nhumans are mortal, and you know that you are human, then in a\nsense you know that you are mortal, whether or not you have ever\nconsidered or wanted to consider that fact.  This is an example\nof logical ",Object(r.b)("strong",{parentName:"p"},"deduction"),": From the ",Object(r.b)("strong",{parentName:"p"},"premises"),' that "All\nhumans are mortal: and "I am human," the ',Object(r.b)("strong",{parentName:"p"},"conclusion"),'\nthat "I am mortal" can be deduced by logic.'),Object(r.b)("p",null,'Logical deduction is a kind of computation.  By applying rules\nof logic to a given set of premises, conclusions that follow\nfrom those premises can be generated automatically, by a\ncomputational process which could be carried out by a computer.\nOnce you know the premises, or are willing to accept them for\nthe sake of argument, you are forced---by logic---to accept\nthe conclusions.  Still, to say that you "know" those conclusions\nwould be misleading.  The problem is that there are too many of\nthem (infinitely many), and, in general, most of them are not\nparticularly interesting.  Until you have actually made the\ndeduction, you don\'t ',Object(r.b)("em",{parentName:"p"},"really")," know the conclusion, and\nknowing which of the possible chains of deduction to follow\nis not easy.  The ",Object(r.b)("em",{parentName:"p"},"art")," of logic is to find\nan interesting conclusion and a chain of logical deductions that\nleads from the premises to that conclusion.  Checking that the\ndeductions are valid is the mechanical, computational side of\nlogic."),Object(r.b)("p",null,"This chapter is mostly about the mechanics of logic.  We will\ninvestigate logic as a branch of mathematics, with its own\nsymbols, formulas, and rules of computation.  Your object is\nto learn the rules of logic, to understand why they are valid,\nand to develop skill in applying them.  As with any branch of\nmathematics, there is a certain beauty to the symbols and formulas\nthemselves.  But it is the applications that bring the subject to\nlife for most people.  We will, of course, cover some applications\nas we go along.   In a sense, though, the real applications of\nlogic include much of computer science and of mathematics itself."),Object(r.b)("p",null,"Among the fundamental elements of thought, and therefore of logic, are\npropositions.  A ",Object(r.b)("strong",{parentName:"p"},"proposition"),' is a statement that has a truth\nvalue:  It is either true or false.\n"Grass is green" and "',Object(r.b)("span",Object(n.a)({parentName:"p"},{className:"math math-inline"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex-mathml"}),Object(r.b)("math",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/1998/Math/MathML"}),Object(r.b)("semantics",{parentName:"math"},Object(r.b)("mrow",{parentName:"semantics"},Object(r.b)("mn",{parentName:"mrow"},"2"),Object(r.b)("mo",{parentName:"mrow"},"+"),Object(r.b)("mn",{parentName:"mrow"},"2"),Object(r.b)("mo",{parentName:"mrow"},"="),Object(r.b)("mn",{parentName:"mrow"},"5")),Object(r.b)("annotation",Object(n.a)({parentName:"semantics"},{encoding:"application/x-tex"}),"2 + 2 = 5")))),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"katex-html","aria-hidden":"true"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"base"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"strut",style:{height:"0.72777em",verticalAlign:"-0.08333em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord"}),"2"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222222222222222em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mbin"}),"+"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mspace",style:{marginRight:"0.2222222222222222em"}}))),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"base"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord"}),"2"),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mspace",style:{marginRight:"0.2777777777777778em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mrel"}),"="),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mspace",style:{marginRight:"0.2777777777777778em"}}))),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"base"}),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"strut",style:{height:"0.64444em",verticalAlign:"0em"}})),Object(r.b)("span",Object(n.a)({parentName:"span"},{className:"mord"}),"5"))))),'"\nare propositions.  In the first part of this chapter, we will\nstudy ',Object(r.b)("strong",{parentName:"p"},"propositional logic"),", which takes propositions as basic\nand considers how they can be combined and manipulated.  This\nbranch of logic has surprising application to the design of\nthe electronic circuits that make up computers."),Object(r.b)("p",null,'Logic gets more interesting when we consider the internal\nstructure of propositions.  In English, a proposition is expressed as\na sentence, and, as you know from studying grammar, sentences have\nparts.  A simple sentence like "Grass is green" has a\n',Object(r.b)("strong",{parentName:"p"},"subject")," and a ",Object(r.b)("strong",{parentName:"p"},"predicate"),'.  The sentence says something\nabout its subject.  The subject of "Grass is green" is grass.\nThe sentence says something about grass.  The ',Object(r.b)("em",{parentName:"p"},"something"),'\nthat the sentence says about its subject is the predicate.\nIn the example, the predicate is the phrase "is green."\nOnce we start working with predicates, we can create propositions\nusing ',Object(r.b)("strong",{parentName:"p"},"quantifiers"),' like "all," "some," and "no."\nFor example, working with the predicate "is above average,"\nwe can move from simple propositions like "Johnny is above\naverage" to "All children are above average" or to\n"No child is above average" or to the rather more realistic\n"Some children are above average."  Logical deduction usually\ndeals with quantified statements, as shown by the basic example of\nhuman mortality with which we began this chapter.  Logical deduction\nwill be a major topic of this chapter;  under the name of\n',Object(r.b)("strong",{parentName:"p"},"proof"),", it will be the last major topic of this chapter,\nand a major tool for the\nrest of this book."))}l.isMDXComponent=!0},213:function(e,t,a){"use strict";a.d(t,"a",(function(){return m})),a.d(t,"b",(function(){return u}));var n=a(0),o=a.n(n);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var p=o.a.createContext({}),l=function(e){var t=o.a.useContext(p),a=t;return e&&(a="function"==typeof e?e(t):i({},t,{},e)),a},m=function(e){var t=l(e.components);return o.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return o.a.createElement(o.a.Fragment,{},t)}},h=Object(n.forwardRef)((function(e,t){var a=e.components,n=e.mdxType,r=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),m=l(a),h=n,u=m["".concat(s,".").concat(h)]||m[h]||b[h]||r;return a?o.a.createElement(u,i({ref:t},p,{components:a})):o.a.createElement(u,i({ref:t},p))}));function u(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var r=a.length,s=new Array(r);s[0]=h;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:n,s[1]=i;for(var p=2;p<r;p++)s[p]=a[p];return o.a.createElement.apply(null,s)}return o.a.createElement.apply(null,a)}h.displayName="MDXCreateElement"}}]);