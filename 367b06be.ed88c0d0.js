(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{110:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return i})),t.d(n,"metadata",(function(){return o})),t.d(n,"rightToc",(function(){return s})),t.d(n,"default",(function(){return p}));var r=t(1),a=t(6),l=(t(0),t(168)),i={id:"doodle",title:"Doodle Graphics"},o={id:"fp/doodle",title:"Doodle Graphics",description:"```reason hidden",source:"@site/docs/fp/doodle.md",permalink:"/focsipedia/docs/fp/doodle",editUrl:"https://github.com/bhoward/focsipedia/edit/master/docs/fp/doodle.md",sidebar:"someSidebar",previous:{title:"Types in Functional Programming",permalink:"/focsipedia/docs/fp/types"},next:{title:"ReasonML",permalink:"/focsipedia/docs/reason"}},s=[],b={rightToc:s},c="wrapper";function p(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(l.b)(c,Object(r.a)({},b,t,{components:n,mdxType:"MDXLayout"}),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-reason",metastring:"hidden",hidden:!0}),"let (+) = (+.);\nlet (-) = (-.);\nlet (*) = (*.);\nlet (/) = (/.);\nlet (~-) = (~-.);\ntype point = (float, float);\ntype pathElement =\n| MoveTo(point)\n| LineTo(point)\n| CurveTo(point, point, point);\ntype style = (); /* TODO */\ntype angle = float;\ntype image =\n| Empty\n| Ellipse(float, float)\n| Rectangle(float, float)\n| Text(string)\n| OpenPath(list(pathElement))\n| ClosedPath(list(pathElement))\n| Beside(image, image)\n| Above(image, image)\n| On(image, image)\n| Styled(image, style)\n| Translate(image, float, float)\n| Rotate(image, angle)\n| Scale(image, float, float)\n| Bounds(image, float, float, float, float);\nlet rec bbox = img => {\n  switch (img) {\n  | Empty => (0., 0., 0., 0.)\n  | Ellipse(w, h) => (-w / 2., w / 2., -h / 2., h / 2.)\n  | Rectangle(w, h) => (-w / 2., w / 2., -h / 2., h / 2.)\n  | Beside(l, r) => {\n    let (ll, lr, lt, lb) = bbox(l);\n    let (rl, rr, rt, rb) = bbox(r);\n    (ll - (rr - rl) / 2., rr + (lr - ll) / 2., min(lt, rt), max(lb, rb))\n  }\n  | Above(t, b) => {\n    let (tl, tr, tt, tb) = bbox(t);\n    let (bl, br, bt, bb) = bbox(b);\n    (min(tl, bl), max(tr, br), tt - (bb - bt) / 2., bb + (tb - tt) / 2.)\n  }\n  | On(a, b) => {\n    let (al, ar, at, ab) = bbox(a);\n    let (bl, br, bt, bb) = bbox(b);\n    (min(al, bl), max(ar, br), min(at, bt), max(ab, bb))\n  }\n  | Styled(img, _) => bbox(img)\n  | Translate(img, x, y) => {\n    let (l, r, t, b) = bbox(img);\n    (l + x, r + x, t + y, b + y)\n  }\n  | Scale(img, sx, sy) => {\n    let (l, r, t, b) = bbox(img);\n    (l * sx, r * sx, t * sy, b * sy)\n  }\n  | Bounds(_, l, r, t, b) => (l, r, t, b)\n  | _ => (0., 0., 0., 0.) /* TODO */\n  }\n}\nlet rec width = img => {\n  let (l, r, _, _) = bbox(img);\n  r - l\n};\nlet rec height = img => {\n  let (_, _, t, b) = bbox(img);\n  b - t\n};\nlet rec render = img => {\n  switch (img) {\n  | Empty => \"\"\n  | Ellipse(w, h) =>\n    Printf.sprintf(\"<ellipse rx='%f' ry='%f' cx='0' cy='0' />\",\n      w / 2., h / 2.)\n  | Rectangle(w, h) =>\n    Printf.sprintf(\"<rect width='%f' height='%f' x='%f' y='%f' />\",\n      w, h, -w / 2., -h / 2.)\n  | Text(s) =>\n    Printf.sprintf(\"<text x='0' y='0' text-anchor='middle' dominant-baseline='middle'>%s</text>\", s)\n  | OpenPath(path) => \"\" /* TODO */\n  | ClosedPath(path) => \"\" /* TODO */\n  | Beside(l, r) =>\n    Printf.sprintf(\"<g transform='translate(%f,0)'>%s</g>\",\n      -width(r) / 2., render(l))\n    ++\n    Printf.sprintf(\"<g transform='translate(%f,0)'>%s</g>\",\n      width(l) / 2., render(r))\n  | Above(t, b) =>\n    Printf.sprintf(\"<g transform='translate(0,%f)'>%s</g>\",\n      -height(b) / 2., render(t))\n    ++\n    Printf.sprintf(\"<g transform='translate(0,%f)'>%s</g>\",\n      height(t) / 2., render(b))\n  | On(a, b) => render(b) ++ render(a)\n  | Styled(img, sty) => \"\"\n  | Translate(img, x, y) =>\n    Printf.sprintf(\"<g transform='translate(%f,%f)'>%s</g>\",\n      x, y, render(img))\n  | Rotate(img, a) =>\n    Printf.sprintf(\"<g transform='rotate(%f)'>%s</g>\",\n      a, render(img))\n  | Scale(img, sx, sy) =>\n    Printf.sprintf(\"<g transform='scale(%f,%f)'>%s</g>\",\n      sx, sy, render(img))\n  | Bounds(img, _, _, _, _) => render(img)\n  }\n};\nlet draw = image => {\n  print_string(\"<svg viewBox='-100 -100 200 200' width='100%' preserveAspectRatio>\");\n  print_string(\"<g fill='grey' stroke='black'>\");\n  print_string(render(image));\n  print_string(\"</g></svg>\");\n};\nlet circle = r => { Ellipse(2. * r, 2. * r) };\nlet ellipse = (w, h) => { Ellipse(w, h) };\nlet rectangle = (w, h) => { Rectangle(w, h) };\nlet (---) = (t, b) => { Above(t, b) };\nlet (///) = (l, r) => { Beside(l, r) };\nlet (***) = (a, b) => { On(a, b) };\n")),Object(l.b)("p",null,"Here is an example:"),Object(l.b)("pre",null,Object(l.b)("code",Object(r.a)({parentName:"pre"},{className:"language-reason",metastring:"edit",edit:!0}),'let a = Ellipse(60.0, 60.0);\nlet b = Rectangle(50.0, 50.0);\nlet c = Text("Hello");\ndraw(On(a *** b /// a, Rotate(Scale(c, 5., 5.), 45.)));\n')))}p.isMDXComponent=!0},168:function(e,n,t){"use strict";t.d(n,"a",(function(){return p})),t.d(n,"b",(function(){return g}));var r=t(0),a=t.n(r);function l(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){l(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var b=a.a.createContext({}),c=function(e){var n=a.a.useContext(b),t=n;return e&&(t="function"==typeof e?e(n):o({},n,{},e)),t},p=function(e){var n=c(e.components);return a.a.createElement(b.Provider,{value:n},e.children)},f="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},d=Object(r.forwardRef)((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,i=e.parentName,b=s(e,["components","mdxType","originalType","parentName"]),p=c(t),f=r,d=p["".concat(i,".").concat(f)]||p[f]||m[f]||l;return t?a.a.createElement(d,o({ref:n},b,{components:t})):a.a.createElement(d,o({ref:n},b))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,i=new Array(l);i[0]=d;var o={};for(var s in n)hasOwnProperty.call(n,s)&&(o[s]=n[s]);o.originalType=e,o[f]="string"==typeof e?e:r,i[1]=o;for(var b=2;b<l;b++)i[b]=t[b];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,t)}d.displayName="MDXCreateElement"}}]);