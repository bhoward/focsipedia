(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{133:function(e,a,i){"use strict";i.r(a),i.d(a,"frontMatter",(function(){return c})),i.d(a,"metadata",(function(){return o})),i.d(a,"rightToc",(function(){return s})),i.d(a,"default",(function(){return l}));var t=i(1),n=i(6),r=(i(0),i(213)),c={id:"topics",title:"Topics"},o={id:"topics",title:"Topics",description:"## Week 1: [Logic](logic/intro.md)",source:"@site/docs/topics.md",permalink:"/focsipedia/docs/topics",editUrl:"https://github.com/bhoward/focsipedia/edit/master/docs/topics.md",sidebar:"someSidebar",previous:{title:"Course Information and Policies",permalink:"/focsipedia/docs/policies"},next:{title:"Logic",permalink:"/focsipedia/docs/logic/intro"}},s=[{value:"Week 1: Logic",id:"week-1-logic",children:[{value:"Propositional Logic and Boolean Algebra",id:"propositional-logic-and-boolean-algebra",children:[]},{value:"Logic Circuits and Circuit Simplification",id:"logic-circuits-and-circuit-simplification",children:[]}]},{value:"Week 2:",id:"week-2",children:[{value:"Common Circuit Components and Design",id:"common-circuit-components-and-design",children:[]},{value:"Sets: Concepts, Boolean Algebra, and Programming",id:"sets-concepts-boolean-algebra-and-programming",children:[]}]},{value:"Week 3:",id:"week-3",children:[{value:"Predicates and Quantifiers, Proofs and Theorem Provers",id:"predicates-and-quantifiers-proofs-and-theorem-provers",children:[]},{value:"Natural Deduction for Propositions, and Predicates",id:"natural-deduction-for-propositions-and-predicates",children:[]}]},{value:"Week 4: Functional Programming",id:"week-4-functional-programming",children:[{value:"Induction and Recursion",id:"induction-and-recursion",children:[]},{value:"Functions and Functional Programming",id:"functions-and-functional-programming",children:[]}]},{value:"Week 5:",id:"week-5",children:[{value:"Algebraic Data Types and Pattern Matching; MapReduce",id:"algebraic-data-types-and-pattern-matching-mapreduce",children:[]},{value:"Running Time and Recurrences",id:"running-time-and-recurrences",children:[]}]},{value:"Week 6: Exam 1",id:"week-6-exam-1",children:[{value:"Functional Graphics",id:"functional-graphics",children:[]}]},{value:"Week 7: Lists",id:"week-7-lists",children:[{value:"Functional Sorting",id:"functional-sorting",children:[]},{value:"Program Verification",id:"program-verification",children:[]}]},{value:"Week 8: Trees",id:"week-8-trees",children:[{value:"Tree Traversals; Binary Search Trees and Heaps",id:"tree-traversals-binary-search-trees-and-heaps",children:[]},{value:"Relations and Relational Databases",id:"relations-and-relational-databases",children:[]}]},{value:"Week 9: Graphs",id:"week-9-graphs",children:[{value:"Graphs, Representations, Traversals",id:"graphs-representations-traversals",children:[]}]},{value:"Week 10: Machine Models",id:"week-10-machine-models",children:[{value:"Languages, Regular Expressions, and Applications; Finite-State Automata",id:"languages-regular-expressions-and-applications-finite-state-automata",children:[]},{value:"Non-deterministic Automata, Equivalence with Regular Expressions",id:"non-deterministic-automata-equivalence-with-regular-expressions",children:[]}]},{value:"Week 11: Exam 2",id:"week-11-exam-2",children:[]},{value:"Week 12:",id:"week-12",children:[{value:"Sequential Circuits",id:"sequential-circuits",children:[]},{value:"State Machines",id:"state-machines",children:[]}]},{value:"Week 13:",id:"week-13",children:[{value:"Grammars",id:"grammars",children:[]},{value:"Parsing, Pushdown Automata",id:"parsing-pushdown-automata",children:[]}]},{value:"Week 14:",id:"week-14",children:[{value:"Turing Machines, Computability",id:"turing-machines-computability",children:[]}]}],d={rightToc:s};function l(e){var a=e.components,i=Object(n.a)(e,["components"]);return Object(r.b)("wrapper",Object(t.a)({},d,i,{components:a,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"week-1-logic"},"Week 1: ",Object(r.b)("a",Object(t.a)({parentName:"h2"},{href:"/focsipedia/docs/logic/intro"}),"Logic")),Object(r.b)("h3",{id:"propositional-logic-and-boolean-algebra"},Object(r.b)("a",Object(t.a)({parentName:"h3"},{href:"/focsipedia/docs/logic/props"}),"Propositional Logic")," and ",Object(r.b)("a",Object(t.a)({parentName:"h3"},{href:"/focsipedia/docs/logic/boolean"}),"Boolean Algebra")),Object(r.b)("h3",{id:"logic-circuits-and-circuit-simplification"},Object(r.b)("a",Object(t.a)({parentName:"h3"},{href:"/focsipedia/docs/logic/circuits"}),"Logic Circuits")," and ",Object(r.b)("a",Object(t.a)({parentName:"h3"},{href:"/focsipedia/docs/logic/simplify"}),"Circuit Simplification")),Object(r.b)("h2",{id:"week-2"},"Week 2:"),Object(r.b)("h3",{id:"common-circuit-components-and-design"},Object(r.b)("a",Object(t.a)({parentName:"h3"},{href:"/focsipedia/docs/logic/components"}),"Common Circuit Components and Design")),Object(r.b)("h3",{id:"sets-concepts-boolean-algebra-and-programming"},"Sets: ",Object(r.b)("a",Object(t.a)({parentName:"h3"},{href:"/focsipedia/docs/sets/concepts"}),"Concepts"),", ",Object(r.b)("a",Object(t.a)({parentName:"h3"},{href:"/focsipedia/docs/sets/algebra"}),"Boolean Algebra"),", and ",Object(r.b)("a",Object(t.a)({parentName:"h3"},{href:"/focsipedia/docs/sets/programming"}),"Programming")),Object(r.b)("h2",{id:"week-3"},"Week 3:"),Object(r.b)("h3",{id:"predicates-and-quantifiers-proofs-and-theorem-provers"},Object(r.b)("a",Object(t.a)({parentName:"h3"},{href:"/focsipedia/docs/logic/preds"}),"Predicates and Quantifiers"),", Proofs and Theorem Provers"),Object(r.b)("h3",{id:"natural-deduction-for-propositions-and-predicates"},"Natural Deduction for ",Object(r.b)("a",Object(t.a)({parentName:"h3"},{href:"/focsipedia/docs/logic/deduction"}),"Propositions"),", and ",Object(r.b)("a",Object(t.a)({parentName:"h3"},{href:"/focsipedia/docs/logic/pred-deduction"}),"Predicates")),Object(r.b)("h2",{id:"week-4-functional-programming"},"Week 4: Functional Programming"),Object(r.b)("h3",{id:"induction-and-recursion"},Object(r.b)("a",Object(t.a)({parentName:"h3"},{href:"/focsipedia/docs/logic/induction"}),"Induction")," and ",Object(r.b)("a",Object(t.a)({parentName:"h3"},{href:"/focsipedia/docs/logic/recursion"}),"Recursion")),Object(r.b)("h3",{id:"functions-and-functional-programming"},Object(r.b)("a",Object(t.a)({parentName:"h3"},{href:"/focsipedia/docs/sets/functions"}),"Functions")," and ",Object(r.b)("a",Object(t.a)({parentName:"h3"},{href:"/focsipedia/docs/fp/intro"}),"Functional Programming")),Object(r.b)("h2",{id:"week-5"},"Week 5:"),Object(r.b)("h3",{id:"algebraic-data-types-and-pattern-matching-mapreduce"},Object(r.b)("a",Object(t.a)({parentName:"h3"},{href:"/focsipedia/docs/fp/types"}),"Algebraic Data Types")," and Pattern Matching; ",Object(r.b)("a",Object(t.a)({parentName:"h3"},{href:"/focsipedia/docs/fp/map-reduce"}),"MapReduce")),Object(r.b)("h3",{id:"running-time-and-recurrences"},"Running Time and Recurrences"),Object(r.b)("h2",{id:"week-6-exam-1"},"Week 6: Exam 1"),Object(r.b)("h3",{id:"functional-graphics"},Object(r.b)("a",Object(t.a)({parentName:"h3"},{href:"/focsipedia/docs/fp/doodle"}),"Functional Graphics")),Object(r.b)("h2",{id:"week-7-lists"},"Week 7: Lists"),Object(r.b)("h3",{id:"functional-sorting"},Object(r.b)("a",Object(t.a)({parentName:"h3"},{href:"/focsipedia/docs/ds/lists"}),"Functional Sorting")),Object(r.b)("h3",{id:"program-verification"},"Program Verification"),Object(r.b)("h2",{id:"week-8-trees"},"Week 8: Trees"),Object(r.b)("h3",{id:"tree-traversals-binary-search-trees-and-heaps"},Object(r.b)("a",Object(t.a)({parentName:"h3"},{href:"/focsipedia/docs/ds/trees"}),"Tree Traversals"),"; ",Object(r.b)("a",Object(t.a)({parentName:"h3"},{href:"/focsipedia/docs/ds/bst"}),"Binary Search Trees and Heaps")),Object(r.b)("h3",{id:"relations-and-relational-databases"},"Relations and Relational Databases"),Object(r.b)("h2",{id:"week-9-graphs"},"Week 9: Graphs"),Object(r.b)("h3",{id:"graphs-representations-traversals"},Object(r.b)("a",Object(t.a)({parentName:"h3"},{href:"/focsipedia/docs/ds/graphs"}),"Graphs, Representations, Traversals")),Object(r.b)("h2",{id:"week-10-machine-models"},"Week 10: Machine Models"),Object(r.b)("h3",{id:"languages-regular-expressions-and-applications-finite-state-automata"},Object(r.b)("a",Object(t.a)({parentName:"h3"},{href:"/focsipedia/docs/lang/languages"}),"Languages"),", ",Object(r.b)("a",Object(t.a)({parentName:"h3"},{href:"/focsipedia/docs/lang/regexp"}),"Regular Expressions"),", and ",Object(r.b)("a",Object(t.a)({parentName:"h3"},{href:"/focsipedia/docs/lang/regexpapp"}),"Applications"),"; ",Object(r.b)("a",Object(t.a)({parentName:"h3"},{href:"/focsipedia/docs/lang/fsa"}),"Finite-State Automata")),Object(r.b)("h3",{id:"non-deterministic-automata-equivalence-with-regular-expressions"},"Non-deterministic Automata, Equivalence with Regular Expressions"),Object(r.b)("h2",{id:"week-11-exam-2"},"Week 11: Exam 2"),Object(r.b)("h2",{id:"week-12"},"Week 12:"),Object(r.b)("h3",{id:"sequential-circuits"},"Sequential Circuits"),Object(r.b)("h3",{id:"state-machines"},"State Machines"),Object(r.b)("h2",{id:"week-13"},"Week 13:"),Object(r.b)("h3",{id:"grammars"},"Grammars"),Object(r.b)("h3",{id:"parsing-pushdown-automata"},"Parsing, Pushdown Automata"),Object(r.b)("h2",{id:"week-14"},"Week 14:"),Object(r.b)("h3",{id:"turing-machines-computability"},"Turing Machines, Computability"))}l.isMDXComponent=!0},213:function(e,a,i){"use strict";i.d(a,"a",(function(){return p})),i.d(a,"b",(function(){return h}));var t=i(0),n=i.n(t);function r(e,a,i){return a in e?Object.defineProperty(e,a,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[a]=i,e}function c(e,a){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),i.push.apply(i,t)}return i}function o(e){for(var a=1;a<arguments.length;a++){var i=null!=arguments[a]?arguments[a]:{};a%2?c(Object(i),!0).forEach((function(a){r(e,a,i[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):c(Object(i)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(i,a))}))}return e}function s(e,a){if(null==e)return{};var i,t,n=function(e,a){if(null==e)return{};var i,t,n={},r=Object.keys(e);for(t=0;t<r.length;t++)i=r[t],a.indexOf(i)>=0||(n[i]=e[i]);return n}(e,a);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(t=0;t<r.length;t++)i=r[t],a.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}var d=n.a.createContext({}),l=function(e){var a=n.a.useContext(d),i=a;return e&&(i="function"==typeof e?e(a):o({},a,{},e)),i},p=function(e){var a=l(e.components);return n.a.createElement(d.Provider,{value:a},e.children)},u={inlineCode:"code",wrapper:function(e){var a=e.children;return n.a.createElement(n.a.Fragment,{},a)}},b=Object(t.forwardRef)((function(e,a){var i=e.components,t=e.mdxType,r=e.originalType,c=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=l(i),b=t,h=p["".concat(c,".").concat(b)]||p[b]||u[b]||r;return i?n.a.createElement(h,o({ref:a},d,{components:i})):n.a.createElement(h,o({ref:a},d))}));function h(e,a){var i=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var r=i.length,c=new Array(r);c[0]=b;var o={};for(var s in a)hasOwnProperty.call(a,s)&&(o[s]=a[s]);o.originalType=e,o.mdxType="string"==typeof e?e:t,c[1]=o;for(var d=2;d<r;d++)c[d]=i[d];return n.a.createElement.apply(null,c)}return n.a.createElement.apply(null,i)}b.displayName="MDXCreateElement"}}]);