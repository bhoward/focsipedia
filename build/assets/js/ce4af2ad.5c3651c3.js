"use strict";(self.webpackChunkfocsipedia=self.webpackChunkfocsipedia||[]).push([[57],{8401:(n,e,l)=>{l.r(e),l.d(e,{assets:()=>s,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var t=l(4848),o=l(8453);const i={id:"galleryS20B",title:"Spring 2020 DPoodle Gallery, Section B"},r=void 0,a={id:"fp/galleryS20B",title:"Spring 2020 DPoodle Gallery, Section B",description:"Alecia Hawkins",source:"@site/focsipedia-docs/target/mdoc/fp/galleryS20B.md",sourceDirName:"fp",slug:"/fp/galleryS20B",permalink:"/focsipedia/docs/fp/galleryS20B",draft:!1,unlisted:!1,editUrl:"https://github.com/bhoward/focsipedia/tree/master/focsipedia-docs/target/mdoc/fp/galleryS20B.md",tags:[],version:"current",frontMatter:{id:"galleryS20B",title:"Spring 2020 DPoodle Gallery, Section B"}},s={},c=[{value:"Alecia Hawkins",id:"alecia-hawkins",level:2},{value:"Brayton Strohmeyer",id:"brayton-strohmeyer",level:2},{value:"Clayton Troyer",id:"clayton-troyer",level:2},{value:"Gangao Yang",id:"gangao-yang",level:2},{value:"Grace Todd",id:"grace-todd",level:2},{value:"Hieu Tran",id:"hieu-tran",level:2},{value:"Jacob Kelber",id:"jacob-kelber",level:2},{value:"Jordyn Blakey",id:"jordyn-blakey",level:2},{value:"Linhao Liu",id:"linhao-liu",level:2},{value:"Mana Kunimatsu",id:"mana-kunimatsu",level:2},{value:"Mason Meadows",id:"mason-meadows",level:2},{value:"Matthew Luing",id:"matthew-luing",level:2},{value:"Robin Bista",id:"robin-bista",level:2},{value:"Xiaoye Zhang",id:"xiaoye-zhang",level:2},{value:"Yuji Mao",id:"yuji-mao",level:2},{value:"Rain Chen",id:"rain-chen",level:2},{value:"Amy Chen",id:"amy-chen",level:2},{value:"Zonghui Hu",id:"zonghui-hu",level:2}];function d(n){const e={code:"code",h2:"h2",pre:"pre",...(0,o.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{id:"alecia-hawkins",children:"Alecia Hawkins"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-reason",metastring:"demo",children:'{\nlet cherry = solid(Color("red"), circle(5.));\nlet flavor = cherry --- solid(Color("pink"), circle(20.));\nlet cone = solid(Color("black"), rotate(180., triangle(35.,55.)));\nlet icecream = flavor --- cone;\nlet rec order = count => {\n  switch (count) {\n  | 0 => empty\n  | n => icecream ||| order(n-1)\n  }\n};\ndraw(order(7));\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"brayton-strohmeyer",children:"Brayton Strohmeyer"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-reason",metastring:"demo",children:'{\nlet arrow = len => {\n  strokeWidth(2., focus(ML, openPath([\n    moveXY(0., 0.),\n    lineXY(len, 0.),\n    lineXY(len -. 5., 5.),\n    moveXY(len, 0.),\n    lineXY(len -. 5., -5.)])))\n};\nlet d = withFont(1., Serif, Bold, Italic, setBounds(-20., 10., -20., 10., Text("N")));\nlet e = withFont(1., Serif, Bold, Italic, setBounds(-20., 10., -20., 10., Text("E")));\nlet f = withFont(1., Serif, Bold, Italic, setBounds(-20., 10., -20., 10., Text("S")));\nlet g = withFont(1., Serif, Bold, Italic, setBounds(-20., 10., -20., 10., Text("W")));\ndraw(d);\ndraw(arrow(45.) +++ rotate(-90., arrow(45.)) +++ rotate(-180., arrow(45.)) \n     +++ rotate(-270., arrow(45.)) +++ fill(color("black"), circle(2.)) +++ \n     rotate(-225., arrow(35.)) +++ fill(color("white"), circle(50.)) +++\n     (translate(70., 0., e)) +++ (translate(-70., 0., g)));\ndraw(translate(0., 0., f));\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"clayton-troyer",children:"Clayton Troyer"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-reason",metastring:"demo",children:"{\nlet color = count =>{\n  switch (count){\n    | 0 => empty\n    | j => fill(hsl(float_of_int(j), 1.0, 0.5), polygon([(-30.0, 14.0), (3.0, -19.0), (16.0, -14.0), (14.0, 2.0)]))\n  }\n};\n\nlet rec obj = count => {\n  switch (count) {\n    | 0 => empty\n    | n => color(n) ||| obj(n-5)\n  }\n};\n\nlet rec row = count => {\n  switch (count) {\n  | 0 => empty\n  | n => (color(n) --- obj(n - 5)) --- row(n - 10)\n  }\n};\n\nlet pyramid = count => {\n  switch (count) {\n  | 0 => empty\n  | n => row(n)\n  }\n};\n\ndraw(pyramid(200));\n}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"gangao-yang",children:"Gangao Yang"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-reason",metastring:"demo",children:"{\nlet rec showList = nums => {\n  let showBox = n => {\n    Styled(ellipse(float_of_int(n * 10), float_of_int(n * 10)),\n      [FillColor(HSLA(float_of_int(n * 36), 1.0, 0.5, 1.0))])\n  };\n   switch (nums) {\n  | [] => Empty\n  | [head, ...tail] => Beside(showBox(head), showList(tail))\n  }\n};\n \ndraw(showList([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\n}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"grace-todd",children:"Grace Todd"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-reason",metastring:"demo",children:"{\nlet rec worm = nums => {\n  switch(nums){\n    |[] => circle(10.0)\n    |[head] => circle(head)\n    |[head, ...tail] => Beside(circle(10.0), worm(tail))\n  }\n};\ndraw(worm([10.0,10.0,10.0,10.0,10.0,10.0,10.0]))\n}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"hieu-tran",children:"Hieu Tran"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-reason",metastring:"demo",children:"{\nlet rec fib = nums => {\n  switch(nums) {\n  | 0 => 0\n  | 1 => 1\n  | nums => fib(nums-1) + fib(nums-2)\n   }\n};\n\nlet rec d = nums => {\n   let dm = n => {\n      fill(hsl(float_of_int(n*1000), 1.0, 0.5), circle(float_of_int(n*5)))\n   }\n   switch(nums) {\n   | 0 => empty\n   | nums => Above(dm(nums), d(nums-1))\n    }\n};\n\ndraw(d(fib(7)))\n}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"jacob-kelber",children:"Jacob Kelber"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-reason",metastring:"demo",children:"{\nlet rec fractal = (n) => {\n     let a = rectangle(30.0,40.0);\n     let n = 15;\n     if(n == 0){\n           draw(a);\n}  \t\n     else if(n > 0){\n           draw(a);\n           draw(rotate(30.0,a));\n\t   fractal(n-1);\n} \n}\n}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"jordyn-blakey",children:"Jordyn Blakey"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-reason",metastring:"demo",children:"{\nlet circleNum = count => {\n  switch (count) {\n  | 0 => empty\n  | i => fill(rgb(255, 215, 0), circle(10.))\n  }\n};\n \nlet rec part1 = count => {\n  switch (count) {\n  | 0 => empty\n  | n => circleNum(n) --- part1(n - 1)\n  }\n};\n \nlet rec part2 = count => {\n  switch (count) {\n  | 0 => empty\n  | n => part1(n) ||| part2(n - 1)\n  }\n};\n \nlet brick = square(10.);\nlet rec layer = nums => {\nswitch(nums) {\n  |0 => empty\n  |l => brick ||| layer(l - 1)\n  }\n};\n \nlet rec layer2 = nums => {\nswitch(nums) {\n  |0 => empty\n  |j => layer(j) +++ layer(j - 1)\n  }\n};\n \ndraw(part2(60) ||| layer2(90));\n}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"linhao-liu",children:"Linhao Liu"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-reason",metastring:"demo",children:'{\nlet squares = n => {\n  \n  let c = solid(Color("blueViolet"), text(string_of_int(n))) +++ square(20.0);\n  fill(Color("silver"),c);\n};\nlet a = setBounds(-30.,30.,-9.,9.,text("good"));\nlet b = rotate(90.,scale(1.,a))\nlet rec showList = nums => {\n  switch (nums) {\n  | [] => solid(Color("violet"), b)\n  | [head, ...tail] => squares(head) ||| showList(tail)\n  }\n};\n\ndraw(showList([1, 2, 3]));\ndraw(showList([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"mana-kunimatsu",children:"Mana Kunimatsu"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-reason",metastring:"demo",children:'{\nlet blueFill = img => { Styled(img, [FillColor(Color("blue"))]) };\nlet pinkFill = img => { Styled(img, [FillColor(Color("pink"))]) };\nlet greenFill = img => { Styled(img, [FillColor(Color("green"))]) };\nlet redOutline = img => { Styled(img, [LineColor(Color("green"))]) };\nlet a = blueFill(circle(75.0));\nlet b = pinkFill(circle(75.0));\nlet c = greenFill(circle(90.0));\nlet d = Text("Peace");\ndraw(On(Rotate(Scale(d, 4., 7.), 0.),\n    redOutline(Above(Beside(a, b), c))));\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"mason-meadows",children:"Mason Meadows"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-reason",metastring:"demo",children:'{\nlet eyeL = (ellipse(10.0, 10.0));\nlet eyeR = (ellipse(10.0, 10.0));\nlet eyeCL = fill(color("blue"), eyeL);\nlet eyeCR = fill(color("blue"), eyeR);\nlet nose = (triangle(5.0, 5.0));\nlet noseC = fill(color("yellow"), nose);\n\ndraw(translate(0.0, 0.0, eyeCL) ||| eyeCR)\ndraw(noseC)\ndraw(polyline([(-10.0, 5.0), (10.0, 3.0)]))\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"matthew-luing",children:"Matthew Luing"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-reason",metastring:"demo",children:'{\nlet column = count => {\n  switch (count) {\n  | 0 => empty\n  | k => fill(color("darkOrange"), triangle(5.0, 8.0))\n  }\n};\nlet rec single = count => {\n  switch (count) {\n  | 0 => empty\n  | n => column(n) ||| single(n - 10)\n  }\n};\nlet rec row = count => {\n  switch (count) {\n  | 0 => empty\n  | n => row(n - 10) --- (column(n) ||| single(n - 10))\n  }\n};\nlet pyramid = count => {\n  switch (count) {\n  | 0 => empty\n  | n => row(n)\n  }\n};\ndraw(pyramid(100));\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"robin-bista",children:"Robin Bista"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-reason",metastring:"demo",children:'{\nlet line = length => {\n  strokeWidth(2., focus(ML, openPath([\n    moveXY(0., 0.),\n    lineXY(length, 0.),\n    moveXY(length, 0.)])))\n};\n\nlet leftEye = solid(color("blue"), circle(30.));\nlet p1 = (-50., 0.);\nlet p2 = (50., 0.);\nlet c1 = (-10., 30.);\nlet c2 = (10., 30.);\n\nlet curve = openPath([moveP(p1), curveP(c1, c2, p2)]);\n\nlet rec sunGlasses = nums => {\n  switch (nums) {\n  | [] => solid(color("green"), circle(30.))\n  | [head, ...tail] => line(head) ||| sunGlasses(tail)\n  }\n};\n\ndraw(rotate(-90., translate(0., 0., leftEye) --- rotate(90., sunGlasses([30., 1.]))) --- rotate(-90., line(35.)) --- curve +++ fill(color("navyblue"), circle(30.)))\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"xiaoye-zhang",children:"Xiaoye Zhang"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-reason",metastring:"demo",children:'{\nlet circles = n => {\n  let fCircle = solid(Color("blue"), text(string_of_int(n))) +++ circle(20.0);\n  fill(Color("yellow"), fCircle )\n};\n\nlet a = setBounds(-24., 24., -7., 7., text("stop"));\nlet b = rotate(45., scale(1., a))\n\nlet rec showList = nums => {\n  switch (nums) {\n  | [] => solid(Color("red"), b)\n  | [head, ...tail] => circles(head) ||| showList(tail)\n  }\n};\n\ndraw(showList([1, 2, 3]));\ndraw(showList([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"yuji-mao",children:"Yuji Mao"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-reason",metastring:"demo",children:'{\nlet listBuilding = n => {\n  let valueFloor = solid(color("papayaWhip"), text(string_of_int(n))) +++ square(3.7);\n  let nextFloor = circle(2.) +++ square(3.7);\n  fill(color("white"), valueFloor +++ nextFloor)\n};\n\nlet d = withFont(2., Serif, Bold, Italic, setBounds(-30., 30., -20., 20., Text("Jasmyn")));\n\nlet rec showList = nums => {\n  switch (nums) {\n  | [] => solid(color("peachPuff"),  d)\n  | [head, ...tail] => listBuilding(head) --- showList(tail)\n  }\n};\n\ndraw(showList([1, 3, 5, 7, 9]));\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"rain-chen",children:"Rain Chen"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-reason",metastring:"demo",children:'{\nlet listNode = n => {\n  let valueField = solid(color("black"), text(string_of_int(n))) +++ square(20.);\n  fill(color("white"), valueField)\n};\n\nlet endOfTail = setBounds(-20.,20.,-20.,20.,text ("END"));\n\nlet rec showList = nums => {\n  switch (nums) {\n  | [] => solid(color("black"), endOfTail)\n  | [head, ...tail] => listNode(head) ||| showList(tail)\n  }\n};\n\ndraw(showList([1, 2, 3]));\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"amy-chen",children:"Amy Chen"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-reason",metastring:"demo",children:"{\nlet rec list = nums => {\n  let showBox = n => {\n\t  Styled(ellipse(5., float_of_int(n*5)),\n\t    [FillColor(rgb(100,50,100))])\n  };\n  switch (nums) {\n  | [] => empty\n  | [head, ...tail] => Beside(showBox(head), list(tail))\n  }\n};\n\ndraw(list([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]));\n}\n"})}),"\n",(0,t.jsx)(e.h2,{id:"zonghui-hu",children:"Zonghui Hu"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-reason",metastring:"demo",children:'{\nlet arrow = len => {\n  strokeWidth(2., focus(ML, openPath([\n    moveXY(0., 0.),\n    lineXY(len, 0.),\n    lineXY(len -. 5., 5.),\n    moveXY(len, 0.),\n    lineXY(len -. 5., -5.)])))\n};\n\nlet squareCircle = n => {\n  if (n mod 2 == 0){\n  let valueField = stroke(color("black"), text(string_of_int(n))) +++ circle(15.0);\n  let nextField = rotate(90.,arrow(20.)) ;\n  fill(color("gray"), valueField) --- stroke(color("red"), nextField);\n  }\n  else {\n  let valueField = stroke(color("black"), text(string_of_int(n))) +++ square(25.0);\n  let nextField = rotate(90.,arrow(20.)) ;\n  fill(color("gray"), valueField) --- stroke(color("red"), nextField);\n  }\n};\n\nlet rec showList = nums => {\n  switch (nums) {\n  | [] => solid(color("yellow"), text("Hello World"))\n  | [head, ...tail] => squareCircle(head) --- showList(tail)\n  }\n};\n\ndraw(showList([1, 2, 3]));\ndraw(showList([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n}\n'})})]})}function h(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},8453:(n,e,l)=>{l.d(e,{R:()=>r,x:()=>a});var t=l(6540);const o={},i=t.createContext(o);function r(n){const e=t.useContext(i);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),t.createElement(i.Provider,{value:e},n.children)}}}]);