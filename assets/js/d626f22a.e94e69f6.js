"use strict";(self.webpackChunkfocsipedia=self.webpackChunkfocsipedia||[]).push([[2724],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>h});var l=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,l)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,l,r=function(e,n){if(null==e)return{};var t,l,r={},a=Object.keys(e);for(l=0;l<a.length;l++)t=a[l],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)t=a[l],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=l.createContext({}),c=function(e){var n=l.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=c(e.components);return l.createElement(s.Provider,{value:n},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var n=e.children;return l.createElement(l.Fragment,{},n)}},p=l.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=c(t),p=r,h=u["".concat(s,".").concat(p)]||u[p]||m[p]||a;return t?l.createElement(h,o(o({ref:n},d),{},{components:t})):l.createElement(h,o({ref:n},d))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=p;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i[u]="string"==typeof e?e:r,o[1]=i;for(var c=2;c<a;c++)o[c]=t[c];return l.createElement.apply(null,o)}return l.createElement.apply(null,t)}p.displayName="MDXCreateElement"},3035:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>a,metadata:()=>i,toc:()=>c});var l=t(7462),r=(t(7294),t(3905));const a={id:"galleryS20B",title:"Spring 2020 DPoodle Gallery, Section B"},o=void 0,i={unversionedId:"fp/galleryS20B",id:"fp/galleryS20B",title:"Spring 2020 DPoodle Gallery, Section B",description:"Alecia Hawkins",source:"@site/docs/fp/galleryS20B.md",sourceDirName:"fp",slug:"/fp/galleryS20B",permalink:"/focsipedia/docs/fp/galleryS20B",draft:!1,editUrl:"https://github.com/bhoward/focsipedia/edit/master/docs/fp/galleryS20B.md",tags:[],version:"current",frontMatter:{id:"galleryS20B",title:"Spring 2020 DPoodle Gallery, Section B"}},s={},c=[{value:"Alecia Hawkins",id:"alecia-hawkins",level:2},{value:"Brayton Strohmeyer",id:"brayton-strohmeyer",level:2},{value:"Clayton Troyer",id:"clayton-troyer",level:2},{value:"Gangao Yang",id:"gangao-yang",level:2},{value:"Grace Todd",id:"grace-todd",level:2},{value:"Hieu Tran",id:"hieu-tran",level:2},{value:"Jacob Kelber",id:"jacob-kelber",level:2},{value:"Jordyn Blakey",id:"jordyn-blakey",level:2},{value:"Linhao Liu",id:"linhao-liu",level:2},{value:"Mana Kunimatsu",id:"mana-kunimatsu",level:2},{value:"Mason Meadows",id:"mason-meadows",level:2},{value:"Matthew Luing",id:"matthew-luing",level:2},{value:"Robin Bista",id:"robin-bista",level:2},{value:"Xiaoye Zhang",id:"xiaoye-zhang",level:2},{value:"Yuji Mao",id:"yuji-mao",level:2},{value:"Rain Chen",id:"rain-chen",level:2},{value:"Amy Chen",id:"amy-chen",level:2},{value:"Zonghui Hu",id:"zonghui-hu",level:2}],d={toc:c},u="wrapper";function m(e){let{components:n,...t}=e;return(0,r.kt)(u,(0,l.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"alecia-hawkins"},"Alecia Hawkins"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-reason",metastring:"demo",demo:!0},'{\nlet cherry = solid(Color("red"), circle(5.));\nlet flavor = cherry --- solid(Color("pink"), circle(20.));\nlet cone = solid(Color("black"), rotate(180., triangle(35.,55.)));\nlet icecream = flavor --- cone;\nlet rec order = count => {\n  switch (count) {\n  | 0 => empty\n  | n => icecream ||| order(n-1)\n  }\n};\ndraw(order(7));\n}\n')),(0,r.kt)("h2",{id:"brayton-strohmeyer"},"Brayton Strohmeyer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-reason",metastring:"demo",demo:!0},'{\nlet arrow = len => {\n  strokeWidth(2., focus(ML, openPath([\n    moveXY(0., 0.),\n    lineXY(len, 0.),\n    lineXY(len -. 5., 5.),\n    moveXY(len, 0.),\n    lineXY(len -. 5., -5.)])))\n};\nlet d = withFont(1., Serif, Bold, Italic, setBounds(-20., 10., -20., 10., Text("N")));\nlet e = withFont(1., Serif, Bold, Italic, setBounds(-20., 10., -20., 10., Text("E")));\nlet f = withFont(1., Serif, Bold, Italic, setBounds(-20., 10., -20., 10., Text("S")));\nlet g = withFont(1., Serif, Bold, Italic, setBounds(-20., 10., -20., 10., Text("W")));\ndraw(d);\ndraw(arrow(45.) +++ rotate(-90., arrow(45.)) +++ rotate(-180., arrow(45.)) \n     +++ rotate(-270., arrow(45.)) +++ fill(color("black"), circle(2.)) +++ \n     rotate(-225., arrow(35.)) +++ fill(color("white"), circle(50.)) +++\n     (translate(70., 0., e)) +++ (translate(-70., 0., g)));\ndraw(translate(0., 0., f));\n}\n')),(0,r.kt)("h2",{id:"clayton-troyer"},"Clayton Troyer"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-reason",metastring:"demo",demo:!0},"{\nlet color = count =>{\n  switch (count){\n    | 0 => empty\n    | j => fill(hsl(float_of_int(j), 1.0, 0.5), polygon([(-30.0, 14.0), (3.0, -19.0), (16.0, -14.0), (14.0, 2.0)]))\n  }\n};\n\nlet rec obj = count => {\n  switch (count) {\n    | 0 => empty\n    | n => color(n) ||| obj(n-5)\n  }\n};\n\nlet rec row = count => {\n  switch (count) {\n  | 0 => empty\n  | n => (color(n) --- obj(n - 5)) --- row(n - 10)\n  }\n};\n\nlet pyramid = count => {\n  switch (count) {\n  | 0 => empty\n  | n => row(n)\n  }\n};\n\ndraw(pyramid(200));\n}\n")),(0,r.kt)("h2",{id:"gangao-yang"},"Gangao Yang"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-reason",metastring:"demo",demo:!0},"{\nlet rec showList = nums => {\n  let showBox = n => {\n    Styled(ellipse(float_of_int(n * 10), float_of_int(n * 10)),\n      [FillColor(HSLA(float_of_int(n * 36), 1.0, 0.5, 1.0))])\n  };\n   switch (nums) {\n  | [] => Empty\n  | [head, ...tail] => Beside(showBox(head), showList(tail))\n  }\n};\n \ndraw(showList([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\n}\n")),(0,r.kt)("h2",{id:"grace-todd"},"Grace Todd"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-reason",metastring:"demo",demo:!0},"{\nlet rec worm = nums => {\n  switch(nums){\n    |[] => circle(10.0)\n    |[head] => circle(head)\n    |[head, ...tail] => Beside(circle(10.0), worm(tail))\n  }\n};\ndraw(worm([10.0,10.0,10.0,10.0,10.0,10.0,10.0]))\n}\n")),(0,r.kt)("h2",{id:"hieu-tran"},"Hieu Tran"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-reason",metastring:"demo",demo:!0},"{\nlet rec fib = nums => {\n  switch(nums) {\n  | 0 => 0\n  | 1 => 1\n  | nums => fib(nums-1) + fib(nums-2)\n   }\n};\n\nlet rec d = nums => {\n   let dm = n => {\n      fill(hsl(float_of_int(n*1000), 1.0, 0.5), circle(float_of_int(n*5)))\n   }\n   switch(nums) {\n   | 0 => empty\n   | nums => Above(dm(nums), d(nums-1))\n    }\n};\n\ndraw(d(fib(7)))\n}\n")),(0,r.kt)("h2",{id:"jacob-kelber"},"Jacob Kelber"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-reason",metastring:"demo",demo:!0},"{\nlet rec fractal = (n) => {\n     let a = rectangle(30.0,40.0);\n     let n = 15;\n     if(n == 0){\n           draw(a);\n}   \n     else if(n > 0){\n           draw(a);\n           draw(rotate(30.0,a));\n       fractal(n-1);\n} \n}\n}\n")),(0,r.kt)("h2",{id:"jordyn-blakey"},"Jordyn Blakey"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-reason",metastring:"demo",demo:!0},"{\nlet circleNum = count => {\n  switch (count) {\n  | 0 => empty\n  | i => fill(rgb(255, 215, 0), circle(10.))\n  }\n};\n \nlet rec part1 = count => {\n  switch (count) {\n  | 0 => empty\n  | n => circleNum(n) --- part1(n - 1)\n  }\n};\n \nlet rec part2 = count => {\n  switch (count) {\n  | 0 => empty\n  | n => part1(n) ||| part2(n - 1)\n  }\n};\n \nlet brick = square(10.);\nlet rec layer = nums => {\nswitch(nums) {\n  |0 => empty\n  |l => brick ||| layer(l - 1)\n  }\n};\n \nlet rec layer2 = nums => {\nswitch(nums) {\n  |0 => empty\n  |j => layer(j) +++ layer(j - 1)\n  }\n};\n \ndraw(part2(60) ||| layer2(90));\n}\n")),(0,r.kt)("h2",{id:"linhao-liu"},"Linhao Liu"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-reason",metastring:"demo",demo:!0},'{\nlet squares = n => {\n  \n  let c = solid(Color("blueViolet"), text(string_of_int(n))) +++ square(20.0);\n  fill(Color("silver"),c);\n};\nlet a = setBounds(-30.,30.,-9.,9.,text("good"));\nlet b = rotate(90.,scale(1.,a))\nlet rec showList = nums => {\n  switch (nums) {\n  | [] => solid(Color("violet"), b)\n  | [head, ...tail] => squares(head) ||| showList(tail)\n  }\n};\n\ndraw(showList([1, 2, 3]));\ndraw(showList([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n}\n')),(0,r.kt)("h2",{id:"mana-kunimatsu"},"Mana Kunimatsu"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-reason",metastring:"demo",demo:!0},'{\nlet blueFill = img => { Styled(img, [FillColor(Color("blue"))]) };\nlet pinkFill = img => { Styled(img, [FillColor(Color("pink"))]) };\nlet greenFill = img => { Styled(img, [FillColor(Color("green"))]) };\nlet redOutline = img => { Styled(img, [LineColor(Color("green"))]) };\nlet a = blueFill(circle(75.0));\nlet b = pinkFill(circle(75.0));\nlet c = greenFill(circle(90.0));\nlet d = Text("Peace");\ndraw(On(Rotate(Scale(d, 4., 7.), 0.),\n    redOutline(Above(Beside(a, b), c))));\n}\n')),(0,r.kt)("h2",{id:"mason-meadows"},"Mason Meadows"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-reason",metastring:"demo",demo:!0},'{\nlet eyeL = (ellipse(10.0, 10.0));\nlet eyeR = (ellipse(10.0, 10.0));\nlet eyeCL = fill(color("blue"), eyeL);\nlet eyeCR = fill(color("blue"), eyeR);\nlet nose = (triangle(5.0, 5.0));\nlet noseC = fill(color("yellow"), nose);\n\ndraw(translate(0.0, 0.0, eyeCL) ||| eyeCR)\ndraw(noseC)\ndraw(polyline([(-10.0, 5.0), (10.0, 3.0)]))\n}\n')),(0,r.kt)("h2",{id:"matthew-luing"},"Matthew Luing"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-reason",metastring:"demo",demo:!0},'{\nlet column = count => {\n  switch (count) {\n  | 0 => empty\n  | k => fill(color("darkOrange"), triangle(5.0, 8.0))\n  }\n};\nlet rec single = count => {\n  switch (count) {\n  | 0 => empty\n  | n => column(n) ||| single(n - 10)\n  }\n};\nlet rec row = count => {\n  switch (count) {\n  | 0 => empty\n  | n => row(n - 10) --- (column(n) ||| single(n - 10))\n  }\n};\nlet pyramid = count => {\n  switch (count) {\n  | 0 => empty\n  | n => row(n)\n  }\n};\ndraw(pyramid(100));\n}\n')),(0,r.kt)("h2",{id:"robin-bista"},"Robin Bista"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-reason",metastring:"demo",demo:!0},'{\nlet line = length => {\n  strokeWidth(2., focus(ML, openPath([\n    moveXY(0., 0.),\n    lineXY(length, 0.),\n    moveXY(length, 0.)])))\n};\n\nlet leftEye = solid(color("blue"), circle(30.));\nlet p1 = (-50., 0.);\nlet p2 = (50., 0.);\nlet c1 = (-10., 30.);\nlet c2 = (10., 30.);\n\nlet curve = openPath([moveP(p1), curveP(c1, c2, p2)]);\n\nlet rec sunGlasses = nums => {\n  switch (nums) {\n  | [] => solid(color("green"), circle(30.))\n  | [head, ...tail] => line(head) ||| sunGlasses(tail)\n  }\n};\n\ndraw(rotate(-90., translate(0., 0., leftEye) --- rotate(90., sunGlasses([30., 1.]))) --- rotate(-90., line(35.)) --- curve +++ fill(color("navyblue"), circle(30.)))\n}\n')),(0,r.kt)("h2",{id:"xiaoye-zhang"},"Xiaoye Zhang"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-reason",metastring:"demo",demo:!0},'{\nlet circles = n => {\n  let fCircle = solid(Color("blue"), text(string_of_int(n))) +++ circle(20.0);\n  fill(Color("yellow"), fCircle )\n};\n\nlet a = setBounds(-24., 24., -7., 7., text("stop"));\nlet b = rotate(45., scale(1., a))\n\nlet rec showList = nums => {\n  switch (nums) {\n  | [] => solid(Color("red"), b)\n  | [head, ...tail] => circles(head) ||| showList(tail)\n  }\n};\n\ndraw(showList([1, 2, 3]));\ndraw(showList([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n}\n')),(0,r.kt)("h2",{id:"yuji-mao"},"Yuji Mao"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-reason",metastring:"demo",demo:!0},'{\nlet listBuilding = n => {\n  let valueFloor = solid(color("papayaWhip"), text(string_of_int(n))) +++ square(3.7);\n  let nextFloor = circle(2.) +++ square(3.7);\n  fill(color("white"), valueFloor +++ nextFloor)\n};\n\nlet d = withFont(2., Serif, Bold, Italic, setBounds(-30., 30., -20., 20., Text("Jasmyn")));\n\nlet rec showList = nums => {\n  switch (nums) {\n  | [] => solid(color("peachPuff"),  d)\n  | [head, ...tail] => listBuilding(head) --- showList(tail)\n  }\n};\n\ndraw(showList([1, 3, 5, 7, 9]));\n}\n')),(0,r.kt)("h2",{id:"rain-chen"},"Rain Chen"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-reason",metastring:"demo",demo:!0},'{\nlet listNode = n => {\n  let valueField = solid(color("black"), text(string_of_int(n))) +++ square(20.);\n  fill(color("white"), valueField)\n};\n\nlet endOfTail = setBounds(-20.,20.,-20.,20.,text ("END"));\n\nlet rec showList = nums => {\n  switch (nums) {\n  | [] => solid(color("black"), endOfTail)\n  | [head, ...tail] => listNode(head) ||| showList(tail)\n  }\n};\n\ndraw(showList([1, 2, 3]));\n}\n')),(0,r.kt)("h2",{id:"amy-chen"},"Amy Chen"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-reason",metastring:"demo",demo:!0},"{\nlet rec list = nums => {\n  let showBox = n => {\n      Styled(ellipse(5., float_of_int(n*5)),\n        [FillColor(rgb(100,50,100))])\n  };\n  switch (nums) {\n  | [] => empty\n  | [head, ...tail] => Beside(showBox(head), list(tail))\n  }\n};\n\ndraw(list([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]));\n}\n")),(0,r.kt)("h2",{id:"zonghui-hu"},"Zonghui Hu"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-reason",metastring:"demo",demo:!0},'{\nlet arrow = len => {\n  strokeWidth(2., focus(ML, openPath([\n    moveXY(0., 0.),\n    lineXY(len, 0.),\n    lineXY(len -. 5., 5.),\n    moveXY(len, 0.),\n    lineXY(len -. 5., -5.)])))\n};\n\nlet squareCircle = n => {\n  if (n mod 2 == 0){\n  let valueField = stroke(color("black"), text(string_of_int(n))) +++ circle(15.0);\n  let nextField = rotate(90.,arrow(20.)) ;\n  fill(color("gray"), valueField) --- stroke(color("red"), nextField);\n  }\n  else {\n  let valueField = stroke(color("black"), text(string_of_int(n))) +++ square(25.0);\n  let nextField = rotate(90.,arrow(20.)) ;\n  fill(color("gray"), valueField) --- stroke(color("red"), nextField);\n  }\n};\n\nlet rec showList = nums => {\n  switch (nums) {\n  | [] => solid(color("yellow"), text("Hello World"))\n  | [head, ...tail] => squareCircle(head) --- showList(tail)\n  }\n};\n\ndraw(showList([1, 2, 3]));\ndraw(showList([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n}\n')))}m.isMDXComponent=!0}}]);