"use strict";(self.webpackChunkfocsipedia=self.webpackChunkfocsipedia||[]).push([[2804],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return s}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},f=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,p=u(e,["components","mdxType","originalType","parentName"]),f=l(n),s=a,m=f["".concat(c,".").concat(s)]||f[s]||d[s]||i;return n?r.createElement(m,o(o({ref:t},p),{},{components:n})):r.createElement(m,o({ref:t},p))}));function s(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=f;var u={};for(var c in t)hasOwnProperty.call(t,c)&&(u[c]=t[c]);u.originalType=e,u.mdxType="string"==typeof e?e:a,o[1]=u;for(var l=2;l<i;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}f.displayName="MDXCreateElement"},3919:function(e,t,n){function r(e){return!0===/^(\w*:|\/\/)/.test(e)}function a(e){return void 0!==e&&!r(e)}n.d(t,{b:function(){return r},Z:function(){return a}})},4996:function(e,t,n){n.d(t,{C:function(){return i},Z:function(){return o}});var r=n(2263),a=n(3919);function i(){var e=(0,r.Z)().siteConfig,t=(e=void 0===e?{}:e).baseUrl,n=void 0===t?"/":t,i=e.url;return{withBaseUrl:function(e,t){return function(e,t,n,r){var i=void 0===r?{}:r,o=i.forcePrependBaseUrl,u=void 0!==o&&o,c=i.absolute,l=void 0!==c&&c;if(!n)return n;if(n.startsWith("#"))return n;if((0,a.b)(n))return n;if(u)return t+n;var p=n.startsWith(t)?n:t+n.replace(/^\//,"");return l?e+p:p}(i,n,e,t)}}}function o(e,t){return void 0===t&&(t={}),(0,i().withBaseUrl)(e,t)}},9376:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return u},contentTitle:function(){return c},metadata:function(){return l},assets:function(){return p},toc:function(){return d},default:function(){return s}});var r=n(7462),a=n(3366),i=(n(7294),n(3905)),o=(n(4996),["components"]),u={slug:"mapreduce",title:"MapReduce",author:"Brian Howard"},c=void 0,l={permalink:"/focsipedia/blog/mapreduce",source:"@site/blog/2020-02-28-mapreduce.md",title:"MapReduce",description:"No reading for today. We will talk about the map and reduce functions on lists, and how they made Google what it is today.",date:"2020-02-28T00:00:00.000Z",formattedDate:"February 28, 2020",tags:[],readingTime:.74,truncated:!0,authors:[{name:"Brian Howard"}],prevItem:{title:"Exam 1 Review",permalink:"/focsipedia/blog/exam1-review"},nextItem:{title:"Types and Functional Programming, Continued",permalink:"/focsipedia/blog/types2"}},p={authorsImageUrls:[void 0]},d=[],f={toc:d};function s(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"No reading for today. We will talk about the ",(0,i.kt)("inlineCode",{parentName:"p"},"map")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"reduce")," functions on lists, and how they made Google what it is today."),(0,i.kt)("p",null,"For reference, here are the definitions of ",(0,i.kt)("inlineCode",{parentName:"p"},"map")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"reduce")," developed in class (this version of ",(0,i.kt)("inlineCode",{parentName:"p"},"reduce")," is often called ",(0,i.kt)("inlineCode",{parentName:"p"},"foldLeft"),"):"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-reason",metastring:"edit",edit:!0},'let rec map = (f, aList) => {\n  switch (aList) {\n  | [] => []\n  | [head, ...tail] => [f(head), ...map(f, tail)]\n  }\n};\n\nlet rec reduce = (g, init, aList) => {\n  switch (aList) {\n  | [] => init\n  | [head, ...tail] => reduce(g, g(init, head), tail)\n  }\n};\n\nmap(n => {2 * n}, [1, 2, 3, 4]);\nreduce((+), 0, [1, 2, 3, 4]);\nreduce((*), 1, [1, 2, 3, 4]);\nreduce((summary, n) => {summary ++ "," ++ string_of_int(n)}, "", [1, 2, 3, 4]);\nreduce((+), 0, map(n => {2 * n}, [1, 2, 3, 4]));\n')))}s.isMDXComponent=!0}}]);