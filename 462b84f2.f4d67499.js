(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{100:function(e,i,a){"use strict";a.r(i),a.d(i,"frontMatter",(function(){return c})),a.d(i,"metadata",(function(){return o})),a.d(i,"rightToc",(function(){return s})),a.d(i,"default",(function(){return u}));var n=a(1),t=a(6),r=(a(0),a(119)),c={id:"topics",title:"Topics"},o={id:"topics",title:"Topics",description:"## Week 1: [Logic](logic/intro.md)",source:"@site/docs/topics.md",permalink:"/focsipedia/docs/topics",editUrl:"https://github.com/bhoward/focsipedia/edit/master/docs/topics.md",sidebar:"someSidebar",previous:{title:"Course Information and Policies",permalink:"/focsipedia/docs/policies"},next:{title:"Logic",permalink:"/focsipedia/docs/logic/intro"}},s=[{value:"Week 1: Logic",id:"week-1-logic",children:[{value:"Propositional Logic and Boolean Algebra",id:"propositional-logic-and-boolean-algebra",children:[]},{value:"Logic Circuits and Circuit Simplification",id:"logic-circuits-and-circuit-simplification",children:[]}]},{value:"Week 2:",id:"week-2",children:[{value:"Common Circuit Components and Design",id:"common-circuit-components-and-design",children:[]},{value:"Sets: Concepts, Boolean Algebra, and Programming",id:"sets-concepts-boolean-algebra-and-programming",children:[]}]},{value:"Week 3:",id:"week-3",children:[{value:"Predicates and Quantifiers, Deduction",id:"predicates-and-quantifiers-deduction",children:[]},{value:"Proofs, Theorem Provers",id:"proofs-theorem-provers",children:[]}]},{value:"Week 4: Functional Programming",id:"week-4-functional-programming",children:[{value:"Recursion and Induction",id:"recursion-and-induction",children:[]},{value:"Functions and Functional Programming",id:"functions-and-functional-programming",children:[]}]},{value:"Week 5:",id:"week-5",children:[{value:"Algebraic Data Types and Pattern Matching",id:"algebraic-data-types-and-pattern-matching",children:[]},{value:"Running Time and Recurrences",id:"running-time-and-recurrences",children:[]}]},{value:"Week 6: Exam 1",id:"week-6-exam-1",children:[]},{value:"Week 7: Lists",id:"week-7-lists",children:[{value:"Functional Sorting",id:"functional-sorting",children:[]},{value:"Program Verification",id:"program-verification",children:[]}]},{value:"Week 8: Trees",id:"week-8-trees",children:[{value:"Tree Traversals",id:"tree-traversals",children:[]},{value:"Relations and Relational Databases",id:"relations-and-relational-databases",children:[]}]},{value:"Week 9: Graphs",id:"week-9-graphs",children:[{value:"Graphs, Representations",id:"graphs-representations",children:[]},{value:"Graph Traversals",id:"graph-traversals",children:[]}]},{value:"Week 10: Machine Models",id:"week-10-machine-models",children:[{value:"Languages and Regular Expressions, Finite-State Automata",id:"languages-and-regular-expressions-finite-state-automata",children:[]},{value:"Non-deterministic Automata, Equivalence with Regular Expressions",id:"non-deterministic-automata-equivalence-with-regular-expressions",children:[]}]},{value:"Week 11: Exam 2",id:"week-11-exam-2",children:[]},{value:"Week 12:",id:"week-12",children:[{value:"Sequential Circuits",id:"sequential-circuits",children:[]},{value:"State Machines",id:"state-machines",children:[]}]},{value:"Week 13:",id:"week-13",children:[{value:"Grammars",id:"grammars",children:[]},{value:"Parsing, Pushdown Automata",id:"parsing-pushdown-automata",children:[]}]},{value:"Week 14:",id:"week-14",children:[{value:"Turing Machines, Computability",id:"turing-machines-computability",children:[]}]}],d={rightToc:s},l="wrapper";function u(e){var i=e.components,a=Object(t.a)(e,["components"]);return Object(r.b)(l,Object(n.a)({},d,a,{components:i,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"week-1-logic"},"Week 1: ",Object(r.b)("a",Object(n.a)({parentName:"h2"},{href:"/focsipedia/docs/logic/intro"}),"Logic")),Object(r.b)("h3",{id:"propositional-logic-and-boolean-algebra"},Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"/focsipedia/docs/logic/props"}),"Propositional Logic")," and ",Object(r.b)("a",Object(n.a)({parentName:"h3"},{href:"/focsipedia/docs/logic/boolean"}),"Boolean Algebra")),Object(r.b)("h3",{id:"logic-circuits-and-circuit-simplification"},"Logic Circuits and Circuit Simplification"),Object(r.b)("h2",{id:"week-2"},"Week 2:"),Object(r.b)("h3",{id:"common-circuit-components-and-design"},"Common Circuit Components and Design"),Object(r.b)("h3",{id:"sets-concepts-boolean-algebra-and-programming"},"Sets: Concepts, Boolean Algebra, and Programming"),Object(r.b)("h2",{id:"week-3"},"Week 3:"),Object(r.b)("h3",{id:"predicates-and-quantifiers-deduction"},"Predicates and Quantifiers, Deduction"),Object(r.b)("h3",{id:"proofs-theorem-provers"},"Proofs, Theorem Provers"),Object(r.b)("h2",{id:"week-4-functional-programming"},"Week 4: Functional Programming"),Object(r.b)("h3",{id:"recursion-and-induction"},"Recursion and Induction"),Object(r.b)("h3",{id:"functions-and-functional-programming"},"Functions and Functional Programming"),Object(r.b)("h2",{id:"week-5"},"Week 5:"),Object(r.b)("h3",{id:"algebraic-data-types-and-pattern-matching"},"Algebraic Data Types and Pattern Matching"),Object(r.b)("h3",{id:"running-time-and-recurrences"},"Running Time and Recurrences"),Object(r.b)("h2",{id:"week-6-exam-1"},"Week 6: Exam 1"),Object(r.b)("h2",{id:"week-7-lists"},"Week 7: Lists"),Object(r.b)("h3",{id:"functional-sorting"},"Functional Sorting"),Object(r.b)("h3",{id:"program-verification"},"Program Verification"),Object(r.b)("h2",{id:"week-8-trees"},"Week 8: Trees"),Object(r.b)("h3",{id:"tree-traversals"},"Tree Traversals"),Object(r.b)("h3",{id:"relations-and-relational-databases"},"Relations and Relational Databases"),Object(r.b)("h2",{id:"week-9-graphs"},"Week 9: Graphs"),Object(r.b)("h3",{id:"graphs-representations"},"Graphs, Representations"),Object(r.b)("h3",{id:"graph-traversals"},"Graph Traversals"),Object(r.b)("h2",{id:"week-10-machine-models"},"Week 10: Machine Models"),Object(r.b)("h3",{id:"languages-and-regular-expressions-finite-state-automata"},"Languages and Regular Expressions, Finite-State Automata"),Object(r.b)("h3",{id:"non-deterministic-automata-equivalence-with-regular-expressions"},"Non-deterministic Automata, Equivalence with Regular Expressions"),Object(r.b)("h2",{id:"week-11-exam-2"},"Week 11: Exam 2"),Object(r.b)("h2",{id:"week-12"},"Week 12:"),Object(r.b)("h3",{id:"sequential-circuits"},"Sequential Circuits"),Object(r.b)("h3",{id:"state-machines"},"State Machines"),Object(r.b)("h2",{id:"week-13"},"Week 13:"),Object(r.b)("h3",{id:"grammars"},"Grammars"),Object(r.b)("h3",{id:"parsing-pushdown-automata"},"Parsing, Pushdown Automata"),Object(r.b)("h2",{id:"week-14"},"Week 14:"),Object(r.b)("h3",{id:"turing-machines-computability"},"Turing Machines, Computability"))}u.isMDXComponent=!0}}]);