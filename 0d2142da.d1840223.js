(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{91:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return s})),a.d(t,"default",(function(){return b}));var n=a(1),r=a(6),o=(a(0),a(120)),i={id:"reason",title:"ReasonML"},c={id:"reason",title:"ReasonML",description:"# ReasonML",source:"@site/docs/reason.mdx",permalink:"/focsipedia/docs/reason",editUrl:"https://github.com/bhoward/focsipedia/edit/master/docs/reason.mdx",sidebar:"someSidebar",previous:{title:"Boolean Algebra",permalink:"/focsipedia/docs/logic/boolean"},next:{title:"Style Guide",permalink:"/focsipedia/docs/styleGuide"}},s=[],l={rightToc:s},p="wrapper";function b(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(o.b)(p,Object(n.a)({},l,a,{components:t,mdxType:"MDXLayout"}),Object(o.b)("h1",{id:"reasonml"},"ReasonML"),Object(o.b)("p",null,Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://reasonml.github.io/"}),"ReasonML")," (often just called Reason) is a functional\nprogramming language developed at Facebook by Jordan Walke, who also created the\n",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://reactjs.org/"}),"ReactJS")," framework. It belongs to the\n",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/ML_(programming_language)"}),"ML")," family of statically-typed\nfunctional languages, which includes ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"http://sml-family.org/"}),"Standard ML"),",\n",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://ocaml.org/"}),"OCaml"),", and Microsoft's ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://fsharp.org/"}),"F#"),". ML was originally\ndeveloped as the ",Object(o.b)("strong",{parentName:"p"},"M"),"eta ",Object(o.b)("strong",{parentName:"p"},"L"),"anguage for the LCF theorem prover at the University of\nEdinburgh, and has long been a valuable tool for programmers working with formal logic or\ndeveloping other programming languages. It was a major influence in the design of the\nfunctional languages ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.haskell.org/"}),"Haskell")," and\n",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://www.scala-lang.org/"}),"Scala"),", and more recently it has seen adoption in financial\nservices (for example, ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://bloomberg.com/"}),"Bloomberg")," and\n",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://janestreet.com"}),"Jane Street"),") and web development (particularly at\n",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://facebook.com"}),"Facebook"),")."),Object(o.b)("p",null,"Reason is a dialect of OCaml with a syntax that is more comfortable for programmers\nfamiliar with JavaScript or other languages in the C/C++/Java family. One advantage of\nbuilding on OCaml is that its compiler is remarkably fast and sophisticated, and it can\ngenerate JavaScript output for running programs in a web browser. In fact, since the\ncompiler itself is written in OCaml, it is possible to compile the entire system to\nJavaScript and run it in the browser."),Object(o.b)("p",null,"Here is an editor where you can type in OCaml code and execute it (click the button\nor type Ctrl-Enter):"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ocaml",metastring:"edit",edit:!0}),"let x = 6\nlet y = x * 7\nlet rec fact x =\n  if x <= 1 then 1 else x * fact (x - 1)\nlet z = fact 5;;\n")),Object(o.b)("p",null,"And here is an editor where you can type in ReasonML code and execute it (click the button\nor type Ctrl-Enter):"),Object(o.b)("pre",null,Object(o.b)("code",Object(n.a)({parentName:"pre"},{className:"language-reason",metastring:"edit",edit:!0}),"let x = 6\nlet y = x * 7\nlet rec fact = (x) =>\n  if (x <= 1) {\n    1\n  } else {\n    x * fact(x - 1)\n  }\nlet z = fact(5)\n")))}b.isMDXComponent=!0}}]);