(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{218:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return l})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return i})),t.d(n,"default",(function(){return d}));var o=t(1),r=t(6),a=(t(0),t(243)),l={id:"doodle-project",title:"DPoodle Graphics Drawing Project"},c={id:"fp/doodle-project",title:"DPoodle Graphics Drawing Project",description:"For Monday, March 30, create a drawing using the [DPoodle](doodle) graphics library. You should feel free to be as creative as you like, the only requirement is that the drawing use recursion in an essential way.",source:"@site/docs/fp/doodle-project.md",permalink:"/focsipedia/docs/fp/doodle-project",editUrl:"https://github.com/bhoward/focsipedia/edit/master/docs/fp/doodle-project.md"},i=[],s={rightToc:i};function d(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(o.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("p",null,"For Monday, March 30, create a drawing using the ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"doodle"}),"DPoodle")," graphics library. You should feel free to be as creative as you like, the only requirement is that the drawing use recursion in an essential way."),Object(a.b)("p",null,"Here is an editor where you can enter your code. ",Object(a.b)("em",{parentName:"p"},"Be sure to copy and paste it somewhere else")," because this editor will be cleared when the page reloads. I suggest keeping a copy in a text editor such as WordPad or TextEdit. When you are done, upload it to Moodle: ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"https://moodle.depauw.edu/mod/assign/view.php?id=243021"}),"Section A")," or ",Object(a.b)("a",Object(o.a)({parentName:"p"},{href:"https://moodle.depauw.edu/mod/assign/view.php?id=243023"}),"Section B"),"."),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-reason",metastring:"edit",edit:!0}),"/*\n * your code here\n */\n")),Object(a.b)("hr",null),Object(a.b)("p",null,"Here are some examples to give you ideas:"),Object(a.b)("p",null,"Bralin Coleman, Fall 2019:"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-reason",metastring:"edit",edit:!0}),"let col = count => {\n  switch (count) {\n  | 0 => empty\n  | k => fill(hsl(float_of_int(k), 1.0, 0.5), rectangle(10., 10.))\n  }\n};\n\nlet rec box = count => {\n  switch (count) {\n  | 0 => empty\n  | n => col(n) ||| box(n - 5)\n  }\n};\n\nlet rec row = count => {\n  switch (count) {\n  | 0 => empty\n  | n => row(n - 10) --- (col(n) ||| box(n - 5))\n  }\n};\n\nlet rec rowR = count => {\n  switch (count) {\n  | 0 => empty\n  | n => (col(n) ||| box(n - 5)) --- rowR(n - 10)\n  }\n};\n\nlet diamond = count => {\n  switch (count) {\n  | 0 => empty\n  | n => row(n) --- rowR(n)\n  }\n};\n\ndraw(diamond(200));\n")),Object(a.b)("p",null,"Kien Ta, Fall 2019:"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-reason",metastring:"edit",edit:!0}),"let sample = (start, radius, samples) => {\n  let step = 10.;\n  let dot = triangle(10., 10.);\n  let rec loop = count => {\n    let angle = radians(step *. float_of_int(count));\n    let r = radius /. float_of_int(samples) *. float_of_int(count); \n    switch (count) {\n    | 0 => empty\n    | n => fill(hsl(float_of_int(240 + count * 50), 1., 0.5),\n        translate(r *. cos(angle), r *. sin(angle), dot)) +++ loop(n - 1)\n    }\n  };\n\n  loop(samples)\n};\ndraw(sample(0., 250., 200));\n")),Object(a.b)("p",null,"Michael Lackey, Fall 2019:"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-reason",metastring:"edit",edit:!0}),'let sky = solid(Color("skyblue"), rectangle(400., 200.));\nlet ground = solid(Color("green"), rectangle(400., 100.));\nlet roof = solid(Color("red"), triangle(50., 50.));\nlet frontDoor = solid(Color("blue"), rectangle(50., 15.)) ---\n  (solid(Color("black"), rectangle(10., 25.)) +++\n    solid(Color("blue"), rectangle(50., 25.)));\nlet house = roof --- frontDoor;\n\nlet rec town = count => {\n  switch (count) {\n  | 0 => empty\n  | n => house ||| town(n - 1)\n  }\n};\n\nlet townPlace = town(5);\ndraw(translate(0., 40., townPlace) +++ translate(0., 100., ground) +++ sky);\n')),Object(a.b)("p",null,"Abby Hutson-Comeaux, Fall 2019:"),Object(a.b)("pre",null,Object(a.b)("code",Object(o.a)({parentName:"pre"},{className:"language-reason",metastring:"edit",edit:!0}),'/* Establishing colors for the honeycomb & bee */\nlet orangeYellow = rgb(255, 215, 0);\nlet yellow = rgb(255, 255, 0);\nlet black = rgb(0, 0, 0);\nlet white = rgb(255, 255, 255);\n\n/* Creating a plain yellow background */\nlet background = solid(yellow, rectangle(400., 300.));\n\n/* oneComb generates each individual honey comb piece */\nlet oneComb = strokeWidth(3., stroke(yellow, fill(orangeYellow, regularPolygon(6, 15., 90.))));\n\n/* Method to create each row with the desired number of combs per row */\nlet rec combsPerRow = num => {\n  switch (num) { \n  | 1 => oneComb\n  | num => oneComb ||| combsPerRow(num - 1)\n  }\n};\n\n/* Method to actually create the honey comb that will be placed over the background */\nlet rec honeyComb = rows => {\n  switch (rows) {\n  | 0 => empty \n  | rows => combsPerRow(16) --- honeyComb(rows - 1)\n  }\n};\n\n/* Making the bottom piece to the bee, including the lines */\nlet beeButt = fill(yellow, openPath([\n  moveXY(-30., 0.), curveXY(-30., 0., 0., -35., 30., 0.),\n  moveXY(-30., 0.), curveXY(-30., 0., 0., 35., 30., 0.),\n  /* add lines for the bees body */\n  moveXY(-15., -12.), lineXY(-15., 12.),\n  moveXY(-5., -16.), lineXY(-5., 16.),\n  moveXY(5., -16.), lineXY(5., 16.),\n  moveXY(15., -12.), lineXY(15., 12.)\n]));\n\n/* Adding the wing to the bottom of the bee */\nlet bottomWing = openPath([\n  moveXY(0., 17.), lineXY(0., 35.),\n]) +++ fill(white, closedPath([\n  moveXY(0., 10.), curveXY(0., 10., -15., 30., 0., 40.),\n  curveXY(15., 30., 0., 10., 0., 10.)\n]));\n\n/* Adding the wing to the top of the bee */\nlet topWing = openPath([\n  moveXY(0., -17.), lineXY(0., -35.),\n]) +++ fill(white, closedPath([\n  moveXY(0., -10.), curveXY(0., -10., -15., -30., 0., -40.),\n  curveXY(15., -30., 0., -10., 0., -10.)\n]));\n\nlet beeBody = fill(black, circle(11.));\nlet beeHead = fill(yellow, circle(7.));\n\n/* Combining the parts of the bee */\nlet bee = beeBody +++ translate(12., 0., beeHead) +++ translate(-25., 0., beeButt);\nlet finalBee = bee +++ bottomWing +++ topWing;\n\nlet words = fill(black, withFont(3.0, Serif, Regular, Normal, text("~Bee Happy~")));\n\n/* Joining the text, honey comb, and bee all together */\nlet finalHoneyComb = words +++ translate(0., 10., honeyComb(10) +++ background);\n\n/* Add bees to the drawing */\nlet oneBee = rotate(320., finalBee) +++ translate(120., 55., finalHoneyComb);\nlet twoBee = rotate(140., finalBee) +++ translate(-230., -120., oneBee);\n\ndraw(twoBee);\n')))}d.isMDXComponent=!0},243:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return m}));var o=t(0),r=t.n(o);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)t=a[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=r.a.createContext({}),d=function(e){var n=r.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c({},n,{},e)),t},u=function(e){var n=d(e.components);return r.a.createElement(s.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},p=Object(o.forwardRef)((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,s=i(e,["components","mdxType","originalType","parentName"]),u=d(t),p=o,m=u["".concat(l,".").concat(p)]||u[p]||b[p]||a;return t?r.a.createElement(m,c({ref:n},s,{components:t})):r.a.createElement(m,c({ref:n},s))}));function m(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,l=new Array(a);l[0]=p;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c.mdxType="string"==typeof e?e:o,l[1]=c;for(var s=2;s<a;s++)l[s]=t[s];return r.a.createElement.apply(null,l)}return r.a.createElement.apply(null,t)}p.displayName="MDXCreateElement"}}]);