(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{226:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return o})),t.d(n,"metadata",(function(){return i})),t.d(n,"rightToc",(function(){return c})),t.d(n,"default",(function(){return d}));var l=t(1),r=t(6),a=(t(0),t(252)),o={id:"galleryS20B",title:"Spring 2020 DPoodle Gallery, Section B"},i={id:"fp/galleryS20B",isDocsHomePage:!1,title:"Spring 2020 DPoodle Gallery, Section B",description:"Alecia Hawkins",source:"@site/docs/fp/galleryS20B.md",permalink:"/focsipedia/docs/fp/galleryS20B",editUrl:"https://github.com/bhoward/focsipedia/edit/master/docs/fp/galleryS20B.md"},c=[{value:"Alecia Hawkins",id:"alecia-hawkins",children:[]},{value:"Brayton Strohmeyer",id:"brayton-strohmeyer",children:[]},{value:"Clayton Troyer",id:"clayton-troyer",children:[]},{value:"Gangao Yang",id:"gangao-yang",children:[]},{value:"Grace Todd",id:"grace-todd",children:[]},{value:"Hieu Tran",id:"hieu-tran",children:[]},{value:"Jacob Kelber",id:"jacob-kelber",children:[]},{value:"Jordyn Blakey",id:"jordyn-blakey",children:[]},{value:"Linhao Liu",id:"linhao-liu",children:[]},{value:"Mana Kunimatsu",id:"mana-kunimatsu",children:[]},{value:"Mason Meadows",id:"mason-meadows",children:[]},{value:"Matthew Luing",id:"matthew-luing",children:[]},{value:"Robin Bista",id:"robin-bista",children:[]},{value:"Xiaoye Zhang",id:"xiaoye-zhang",children:[]},{value:"Yuji Mao",id:"yuji-mao",children:[]},{value:"Rain Chen",id:"rain-chen",children:[]},{value:"Amy Chen",id:"amy-chen",children:[]},{value:"Zonghui Hu",id:"zonghui-hu",children:[]}],s={rightToc:c};function d(e){var n=e.components,t=Object(r.a)(e,["components"]);return Object(a.b)("wrapper",Object(l.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"alecia-hawkins"},"Alecia Hawkins"),Object(a.b)("pre",null,Object(a.b)("code",Object(l.a)({parentName:"pre"},{className:"language-reason",metastring:"demo",demo:!0}),'{\nlet cherry = solid(Color("red"), circle(5.));\nlet flavor = cherry --- solid(Color("pink"), circle(20.));\nlet cone = solid(Color("black"), rotate(180., triangle(35.,55.)));\nlet icecream = flavor --- cone;\nlet rec order = count => {\n  switch (count) {\n  | 0 => empty\n  | n => icecream ||| order(n-1)\n  }\n};\ndraw(order(7));\n}\n')),Object(a.b)("h2",{id:"brayton-strohmeyer"},"Brayton Strohmeyer"),Object(a.b)("pre",null,Object(a.b)("code",Object(l.a)({parentName:"pre"},{className:"language-reason",metastring:"demo",demo:!0}),'{\nlet arrow = len => {\n  strokeWidth(2., focus(ML, openPath([\n    moveXY(0., 0.),\n    lineXY(len, 0.),\n    lineXY(len -. 5., 5.),\n    moveXY(len, 0.),\n    lineXY(len -. 5., -5.)])))\n};\nlet d = withFont(1., Serif, Bold, Italic, setBounds(-20., 10., -20., 10., Text("N")));\nlet e = withFont(1., Serif, Bold, Italic, setBounds(-20., 10., -20., 10., Text("E")));\nlet f = withFont(1., Serif, Bold, Italic, setBounds(-20., 10., -20., 10., Text("S")));\nlet g = withFont(1., Serif, Bold, Italic, setBounds(-20., 10., -20., 10., Text("W")));\ndraw(d);\ndraw(arrow(45.) +++ rotate(-90., arrow(45.)) +++ rotate(-180., arrow(45.)) \n     +++ rotate(-270., arrow(45.)) +++ fill(color("black"), circle(2.)) +++ \n     rotate(-225., arrow(35.)) +++ fill(color("white"), circle(50.)) +++\n     (translate(70., 0., e)) +++ (translate(-70., 0., g)));\ndraw(translate(0., 0., f));\n}\n')),Object(a.b)("h2",{id:"clayton-troyer"},"Clayton Troyer"),Object(a.b)("pre",null,Object(a.b)("code",Object(l.a)({parentName:"pre"},{className:"language-reason",metastring:"demo",demo:!0}),"{\nlet color = count =>{\n  switch (count){\n    | 0 => empty\n    | j => fill(hsl(float_of_int(j), 1.0, 0.5), polygon([(-30.0, 14.0), (3.0, -19.0), (16.0, -14.0), (14.0, 2.0)]))\n  }\n};\n\nlet rec obj = count => {\n  switch (count) {\n    | 0 => empty\n    | n => color(n) ||| obj(n-5)\n  }\n};\n\nlet rec row = count => {\n  switch (count) {\n  | 0 => empty\n  | n => (color(n) --- obj(n - 5)) --- row(n - 10)\n  }\n};\n\nlet pyramid = count => {\n  switch (count) {\n  | 0 => empty\n  | n => row(n)\n  }\n};\n\ndraw(pyramid(200));\n}\n")),Object(a.b)("h2",{id:"gangao-yang"},"Gangao Yang"),Object(a.b)("pre",null,Object(a.b)("code",Object(l.a)({parentName:"pre"},{className:"language-reason",metastring:"demo",demo:!0}),"{\nlet rec showList = nums => {\n  let showBox = n => {\n    Styled(ellipse(float_of_int(n * 10), float_of_int(n * 10)),\n      [FillColor(HSLA(float_of_int(n * 36), 1.0, 0.5, 1.0))])\n  };\n   switch (nums) {\n  | [] => Empty\n  | [head, ...tail] => Beside(showBox(head), showList(tail))\n  }\n};\n \ndraw(showList([1, 2, 3, 4, 5, 6, 7, 8, 9, 10]))\n}\n")),Object(a.b)("h2",{id:"grace-todd"},"Grace Todd"),Object(a.b)("pre",null,Object(a.b)("code",Object(l.a)({parentName:"pre"},{className:"language-reason",metastring:"demo",demo:!0}),"{\nlet rec worm = nums => {\n  switch(nums){\n    |[] => circle(10.0)\n    |[head] => circle(head)\n    |[head, ...tail] => Beside(circle(10.0), worm(tail))\n  }\n};\ndraw(worm([10.0,10.0,10.0,10.0,10.0,10.0,10.0]))\n}\n")),Object(a.b)("h2",{id:"hieu-tran"},"Hieu Tran"),Object(a.b)("pre",null,Object(a.b)("code",Object(l.a)({parentName:"pre"},{className:"language-reason",metastring:"demo",demo:!0}),"{\nlet rec fib = nums => {\n  switch(nums) {\n  | 0 => 0\n  | 1 => 1\n  | nums => fib(nums-1) + fib(nums-2)\n   }\n};\n\nlet rec d = nums => {\n   let dm = n => {\n      fill(hsl(float_of_int(n*1000), 1.0, 0.5), circle(float_of_int(n*5)))\n   }\n   switch(nums) {\n   | 0 => empty\n   | nums => Above(dm(nums), d(nums-1))\n    }\n};\n\ndraw(d(fib(7)))\n}\n")),Object(a.b)("h2",{id:"jacob-kelber"},"Jacob Kelber"),Object(a.b)("pre",null,Object(a.b)("code",Object(l.a)({parentName:"pre"},{className:"language-reason",metastring:"demo",demo:!0}),"{\nlet rec fractal = (n) => {\n     let a = rectangle(30.0,40.0);\n     let n = 15;\n     if(n == 0){\n           draw(a);\n}   \n     else if(n > 0){\n           draw(a);\n           draw(rotate(30.0,a));\n       fractal(n-1);\n} \n}\n}\n")),Object(a.b)("h2",{id:"jordyn-blakey"},"Jordyn Blakey"),Object(a.b)("pre",null,Object(a.b)("code",Object(l.a)({parentName:"pre"},{className:"language-reason",metastring:"demo",demo:!0}),"{\nlet circleNum = count => {\n  switch (count) {\n  | 0 => empty\n  | i => fill(rgb(255, 215, 0), circle(10.))\n  }\n};\n \nlet rec part1 = count => {\n  switch (count) {\n  | 0 => empty\n  | n => circleNum(n) --- part1(n - 1)\n  }\n};\n \nlet rec part2 = count => {\n  switch (count) {\n  | 0 => empty\n  | n => part1(n) ||| part2(n - 1)\n  }\n};\n \nlet brick = square(10.);\nlet rec layer = nums => {\nswitch(nums) {\n  |0 => empty\n  |l => brick ||| layer(l - 1)\n  }\n};\n \nlet rec layer2 = nums => {\nswitch(nums) {\n  |0 => empty\n  |j => layer(j) +++ layer(j - 1)\n  }\n};\n \ndraw(part2(60) ||| layer2(90));\n}\n")),Object(a.b)("h2",{id:"linhao-liu"},"Linhao Liu"),Object(a.b)("pre",null,Object(a.b)("code",Object(l.a)({parentName:"pre"},{className:"language-reason",metastring:"demo",demo:!0}),'{\nlet squares = n => {\n  \n  let c = solid(Color("blueViolet"), text(string_of_int(n))) +++ square(20.0);\n  fill(Color("silver"),c);\n};\nlet a = setBounds(-30.,30.,-9.,9.,text("good"));\nlet b = rotate(90.,scale(1.,a))\nlet rec showList = nums => {\n  switch (nums) {\n  | [] => solid(Color("violet"), b)\n  | [head, ...tail] => squares(head) ||| showList(tail)\n  }\n};\n\ndraw(showList([1, 2, 3]));\ndraw(showList([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n}\n')),Object(a.b)("h2",{id:"mana-kunimatsu"},"Mana Kunimatsu"),Object(a.b)("pre",null,Object(a.b)("code",Object(l.a)({parentName:"pre"},{className:"language-reason",metastring:"demo",demo:!0}),'{\nlet blueFill = img => { Styled(img, [FillColor(Color("blue"))]) };\nlet pinkFill = img => { Styled(img, [FillColor(Color("pink"))]) };\nlet greenFill = img => { Styled(img, [FillColor(Color("green"))]) };\nlet redOutline = img => { Styled(img, [LineColor(Color("green"))]) };\nlet a = blueFill(circle(75.0));\nlet b = pinkFill(circle(75.0));\nlet c = greenFill(circle(90.0));\nlet d = Text("Peace");\ndraw(On(Rotate(Scale(d, 4., 7.), 0.),\n    redOutline(Above(Beside(a, b), c))));\n}\n')),Object(a.b)("h2",{id:"mason-meadows"},"Mason Meadows"),Object(a.b)("pre",null,Object(a.b)("code",Object(l.a)({parentName:"pre"},{className:"language-reason",metastring:"demo",demo:!0}),'{\nlet eyeL = (ellipse(10.0, 10.0));\nlet eyeR = (ellipse(10.0, 10.0));\nlet eyeCL = fill(color("blue"), eyeL);\nlet eyeCR = fill(color("blue"), eyeR);\nlet nose = (triangle(5.0, 5.0));\nlet noseC = fill(color("yellow"), nose);\n\ndraw(translate(0.0, 0.0, eyeCL) ||| eyeCR)\ndraw(noseC)\ndraw(polyline([(-10.0, 5.0), (10.0, 3.0)]))\n}\n')),Object(a.b)("h2",{id:"matthew-luing"},"Matthew Luing"),Object(a.b)("pre",null,Object(a.b)("code",Object(l.a)({parentName:"pre"},{className:"language-reason",metastring:"demo",demo:!0}),'{\nlet column = count => {\n  switch (count) {\n  | 0 => empty\n  | k => fill(color("darkOrange"), triangle(5.0, 8.0))\n  }\n};\nlet rec single = count => {\n  switch (count) {\n  | 0 => empty\n  | n => column(n) ||| single(n - 10)\n  }\n};\nlet rec row = count => {\n  switch (count) {\n  | 0 => empty\n  | n => row(n - 10) --- (column(n) ||| single(n - 10))\n  }\n};\nlet pyramid = count => {\n  switch (count) {\n  | 0 => empty\n  | n => row(n)\n  }\n};\ndraw(pyramid(100));\n}\n')),Object(a.b)("h2",{id:"robin-bista"},"Robin Bista"),Object(a.b)("pre",null,Object(a.b)("code",Object(l.a)({parentName:"pre"},{className:"language-reason",metastring:"demo",demo:!0}),'{\nlet line = length => {\n  strokeWidth(2., focus(ML, openPath([\n    moveXY(0., 0.),\n    lineXY(length, 0.),\n    moveXY(length, 0.)])))\n};\n\nlet leftEye = solid(color("blue"), circle(30.));\nlet p1 = (-50., 0.);\nlet p2 = (50., 0.);\nlet c1 = (-10., 30.);\nlet c2 = (10., 30.);\n\nlet curve = openPath([moveP(p1), curveP(c1, c2, p2)]);\n\nlet rec sunGlasses = nums => {\n  switch (nums) {\n  | [] => solid(color("green"), circle(30.))\n  | [head, ...tail] => line(head) ||| sunGlasses(tail)\n  }\n};\n\ndraw(rotate(-90., translate(0., 0., leftEye) --- rotate(90., sunGlasses([30., 1.]))) --- rotate(-90., line(35.)) --- curve +++ fill(color("navyblue"), circle(30.)))\n}\n')),Object(a.b)("h2",{id:"xiaoye-zhang"},"Xiaoye Zhang"),Object(a.b)("pre",null,Object(a.b)("code",Object(l.a)({parentName:"pre"},{className:"language-reason",metastring:"demo",demo:!0}),'{\nlet circles = n => {\n  let fCircle = solid(Color("blue"), text(string_of_int(n))) +++ circle(20.0);\n  fill(Color("yellow"), fCircle )\n};\n\nlet a = setBounds(-24., 24., -7., 7., text("stop"));\nlet b = rotate(45., scale(1., a))\n\nlet rec showList = nums => {\n  switch (nums) {\n  | [] => solid(Color("red"), b)\n  | [head, ...tail] => circles(head) ||| showList(tail)\n  }\n};\n\ndraw(showList([1, 2, 3]));\ndraw(showList([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n}\n')),Object(a.b)("h2",{id:"yuji-mao"},"Yuji Mao"),Object(a.b)("pre",null,Object(a.b)("code",Object(l.a)({parentName:"pre"},{className:"language-reason",metastring:"demo",demo:!0}),'{\nlet listBuilding = n => {\n  let valueFloor = solid(color("papayaWhip"), text(string_of_int(n))) +++ square(3.7);\n  let nextFloor = circle(2.) +++ square(3.7);\n  fill(color("white"), valueFloor +++ nextFloor)\n};\n\nlet d = withFont(2., Serif, Bold, Italic, setBounds(-30., 30., -20., 20., Text("Jasmyn")));\n\nlet rec showList = nums => {\n  switch (nums) {\n  | [] => solid(color("peachPuff"),  d)\n  | [head, ...tail] => listBuilding(head) --- showList(tail)\n  }\n};\n\ndraw(showList([1, 3, 5, 7, 9]));\n}\n')),Object(a.b)("h2",{id:"rain-chen"},"Rain Chen"),Object(a.b)("pre",null,Object(a.b)("code",Object(l.a)({parentName:"pre"},{className:"language-reason",metastring:"demo",demo:!0}),'{\nlet listNode = n => {\n  let valueField = solid(color("black"), text(string_of_int(n))) +++ square(20.);\n  fill(color("white"), valueField)\n};\n\nlet endOfTail = setBounds(-20.,20.,-20.,20.,text ("END"));\n\nlet rec showList = nums => {\n  switch (nums) {\n  | [] => solid(color("black"), endOfTail)\n  | [head, ...tail] => listNode(head) ||| showList(tail)\n  }\n};\n\ndraw(showList([1, 2, 3]));\n}\n')),Object(a.b)("h2",{id:"amy-chen"},"Amy Chen"),Object(a.b)("pre",null,Object(a.b)("code",Object(l.a)({parentName:"pre"},{className:"language-reason",metastring:"demo",demo:!0}),"{\nlet rec list = nums => {\n  let showBox = n => {\n      Styled(ellipse(5., float_of_int(n*5)),\n        [FillColor(rgb(100,50,100))])\n  };\n  switch (nums) {\n  | [] => empty\n  | [head, ...tail] => Beside(showBox(head), list(tail))\n  }\n};\n\ndraw(list([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]));\n}\n")),Object(a.b)("h2",{id:"zonghui-hu"},"Zonghui Hu"),Object(a.b)("pre",null,Object(a.b)("code",Object(l.a)({parentName:"pre"},{className:"language-reason",metastring:"demo",demo:!0}),'{\nlet arrow = len => {\n  strokeWidth(2., focus(ML, openPath([\n    moveXY(0., 0.),\n    lineXY(len, 0.),\n    lineXY(len -. 5., 5.),\n    moveXY(len, 0.),\n    lineXY(len -. 5., -5.)])))\n};\n\nlet squareCircle = n => {\n  if (n mod 2 == 0){\n  let valueField = stroke(color("black"), text(string_of_int(n))) +++ circle(15.0);\n  let nextField = rotate(90.,arrow(20.)) ;\n  fill(color("gray"), valueField) --- stroke(color("red"), nextField);\n  }\n  else {\n  let valueField = stroke(color("black"), text(string_of_int(n))) +++ square(25.0);\n  let nextField = rotate(90.,arrow(20.)) ;\n  fill(color("gray"), valueField) --- stroke(color("red"), nextField);\n  }\n};\n\nlet rec showList = nums => {\n  switch (nums) {\n  | [] => solid(color("yellow"), text("Hello World"))\n  | [head, ...tail] => squareCircle(head) --- showList(tail)\n  }\n};\n\ndraw(showList([1, 2, 3]));\ndraw(showList([1, 2, 3, 4, 5, 6, 7, 8, 9]));\n}\n')))}d.isMDXComponent=!0},252:function(e,n,t){"use strict";t.d(n,"a",(function(){return u})),t.d(n,"b",(function(){return h}));var l=t(0),r=t.n(l);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);n&&(l=l.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,l)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,l,r=function(e,n){if(null==e)return{};var t,l,r={},a=Object.keys(e);for(l=0;l<a.length;l++)t=a[l],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)t=a[l],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=r.a.createContext({}),d=function(e){var n=r.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i({},n,{},e)),t},u=function(e){var n=d(e.components);return r.a.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.a.createElement(r.a.Fragment,{},n)}},b=Object(l.forwardRef)((function(e,n){var t=e.components,l=e.mdxType,a=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=d(t),b=l,h=u["".concat(o,".").concat(b)]||u[b]||m[b]||a;return t?r.a.createElement(h,i({ref:n},s,{components:t})):r.a.createElement(h,i({ref:n},s))}));function h(e,n){var t=arguments,l=n&&n.mdxType;if("string"==typeof e||l){var a=t.length,o=new Array(a);o[0]=b;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:l,o[1]=i;for(var s=2;s<a;s++)o[s]=t[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,t)}b.displayName="MDXCreateElement"}}]);