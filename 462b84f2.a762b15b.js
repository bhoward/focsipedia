(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{97:function(e,i,a){"use strict";a.r(i),a.d(i,"frontMatter",(function(){return o})),a.d(i,"metadata",(function(){return s})),a.d(i,"rightToc",(function(){return c})),a.d(i,"default",(function(){return l}));var n=a(1),t=a(6),r=(a(0),a(114)),o={id:"topics",title:"Topics"},s={id:"topics",title:"Topics",description:"## Week 1: Propositional Logic and Boolean Algebra. Logic Circuits and Circuit Simplification",source:"@site/docs/topics.md",permalink:"/focsipedia/docs/topics",editUrl:"https://github.com/bhoward/focsipedia/edit/master/docs/topics.md",sidebar:"someSidebar",previous:{title:"Course Information and Policies",permalink:"/focsipedia/docs/policies"},next:{title:"Style Guide",permalink:"/focsipedia/docs/styleGuide"}},c=[{value:"Week 1: Propositional Logic and Boolean Algebra. Logic Circuits and Circuit Simplification",id:"week-1-propositional-logic-and-boolean-algebra-logic-circuits-and-circuit-simplification",children:[]},{value:"Week 2: Common Circuit Components and Design. Sets: Concepts, Boolean Algebra, and Programming",id:"week-2-common-circuit-components-and-design-sets-concepts-boolean-algebra-and-programming",children:[]},{value:"Week 3: Predicates and Quantifiers, Deduction. Proofs, Theorem Provers",id:"week-3-predicates-and-quantifiers-deduction-proofs-theorem-provers",children:[]},{value:"Week 4: Recursion and Induction. Functions and Functional Programming",id:"week-4-recursion-and-induction-functions-and-functional-programming",children:[]},{value:"Week 5: Algebraic Data Types and Pattern Matching. Running Time and Recurrences",id:"week-5-algebraic-data-types-and-pattern-matching-running-time-and-recurrences",children:[]},{value:"Week 6: Exam 1",id:"week-6-exam-1",children:[]},{value:"Week 7: Functional Sorting. Program Verification",id:"week-7-functional-sorting-program-verification",children:[]},{value:"Week 8: Tree Traversals. Relations and Relational Databases",id:"week-8-tree-traversals-relations-and-relational-databases",children:[]},{value:"Week 9: Graphs, Representations. Graph Traversals",id:"week-9-graphs-representations-graph-traversals",children:[]},{value:"Week 10: Languages and Regular Expressions. Finite-State Automata. Non-deterministic Automata, Equivalence with Regular Expressions",id:"week-10-languages-and-regular-expressions-finite-state-automata-non-deterministic-automata-equivalence-with-regular-expressions",children:[]},{value:"Week 11: Exam 2",id:"week-11-exam-2",children:[]},{value:"Week 12: Sequential Circuits. State Machines",id:"week-12-sequential-circuits-state-machines",children:[]},{value:"Week 13: Grammars. Parsing, Pushdown Automata",id:"week-13-grammars-parsing-pushdown-automata",children:[]},{value:"Week 14: Turing Machines, Computability",id:"week-14-turing-machines-computability",children:[]}],d={rightToc:c},u="wrapper";function l(e){var i=e.components,a=Object(t.a)(e,["components"]);return Object(r.b)(u,Object(n.a)({},d,a,{components:i,mdxType:"MDXLayout"}),Object(r.b)("h2",{id:"week-1-propositional-logic-and-boolean-algebra-logic-circuits-and-circuit-simplification"},"Week 1: Propositional Logic and Boolean Algebra. Logic Circuits and Circuit Simplification"),Object(r.b)("h2",{id:"week-2-common-circuit-components-and-design-sets-concepts-boolean-algebra-and-programming"},"Week 2: Common Circuit Components and Design. Sets: Concepts, Boolean Algebra, and Programming"),Object(r.b)("h2",{id:"week-3-predicates-and-quantifiers-deduction-proofs-theorem-provers"},"Week 3: Predicates and Quantifiers, Deduction. Proofs, Theorem Provers"),Object(r.b)("h2",{id:"week-4-recursion-and-induction-functions-and-functional-programming"},"Week 4: Recursion and Induction. Functions and Functional Programming"),Object(r.b)("h2",{id:"week-5-algebraic-data-types-and-pattern-matching-running-time-and-recurrences"},"Week 5: Algebraic Data Types and Pattern Matching. Running Time and Recurrences"),Object(r.b)("h2",{id:"week-6-exam-1"},"Week 6: Exam 1"),Object(r.b)("h2",{id:"week-7-functional-sorting-program-verification"},"Week 7: Functional Sorting. Program Verification"),Object(r.b)("h2",{id:"week-8-tree-traversals-relations-and-relational-databases"},"Week 8: Tree Traversals. Relations and Relational Databases"),Object(r.b)("h2",{id:"week-9-graphs-representations-graph-traversals"},"Week 9: Graphs, Representations. Graph Traversals"),Object(r.b)("h2",{id:"week-10-languages-and-regular-expressions-finite-state-automata-non-deterministic-automata-equivalence-with-regular-expressions"},"Week 10: Languages and Regular Expressions. Finite-State Automata. Non-deterministic Automata, Equivalence with Regular Expressions"),Object(r.b)("h2",{id:"week-11-exam-2"},"Week 11: Exam 2"),Object(r.b)("h2",{id:"week-12-sequential-circuits-state-machines"},"Week 12: Sequential Circuits. State Machines"),Object(r.b)("h2",{id:"week-13-grammars-parsing-pushdown-automata"},"Week 13: Grammars. Parsing, Pushdown Automata"),Object(r.b)("h2",{id:"week-14-turing-machines-computability"},"Week 14: Turing Machines, Computability"))}l.isMDXComponent=!0}}]);